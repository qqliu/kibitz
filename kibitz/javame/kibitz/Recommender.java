/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package kibitz;

import java.util.Hashtable;
import java.util.Vector;
import java.util.Enumeration;

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

public class Recommender implements TBase {
  private static final TStruct STRUCT_DESC = new TStruct("Recommender");

  private static final TField USERNAME_FIELD_DESC = new TField("username", TType.STRING, (short)1);
  private static final TField RECOMMENDER_NAME_FIELD_DESC = new TField("recommenderName", TType.STRING, (short)2);
  private static final TField CLIENT_KEY_FIELD_DESC = new TField("clientKey", TType.STRING, (short)3);
  private static final TField HOMEPAGE_FIELD_DESC = new TField("homepage", TType.STRING, (short)4);
  private static final TField REPO_NAME_FIELD_DESC = new TField("repoName", TType.STRING, (short)5);
  private static final TField TITLE_FIELD_DESC = new TField("title", TType.STRING, (short)6);
  private static final TField DESCRIPTION_FIELD_DESC = new TField("description", TType.STRING, (short)7);
  private static final TField IMAGE_FIELD_DESC = new TField("image", TType.STRING, (short)8);
  private static final TField VIDEO_FIELD_DESC = new TField("video", TType.STRING, (short)9);
  private static final TField ITEM_TYPES_FIELD_DESC = new TField("itemTypes", TType.MAP, (short)10);
  private static final TField DISPLAY_ITEMS_FIELD_DESC = new TField("displayItems", TType.LIST, (short)11);
  private static final TField NUM_RECS_FIELD_DESC = new TField("numRecs", TType.I64, (short)12);
  private static final TField MAX_RATING_VAL_FIELD_DESC = new TField("maxRatingVal", TType.I64, (short)13);
  private static final TField RATINGS_COLUMN_FIELD_DESC = new TField("ratingsColumn", TType.STRING, (short)14);
  private static final TField PRIMARY_KEY_FIELD_DESC = new TField("primaryKey", TType.STRING, (short)15);

  private String username;
  private String recommenderName;
  private String clientKey;
  private String homepage;
  private String repoName;
  private String title;
  private String description;
  private String image;
  private String video;
  private Hashtable itemTypes;
  private Vector displayItems;
  private long numRecs;
  private long maxRatingVal;
  private String ratingsColumn;
  private String primaryKey;

  // isset id assignments
  private static final int __NUMRECS_ISSET_ID = 0;
  private static final int __MAXRATINGVAL_ISSET_ID = 1;
  private boolean[] __isset_vector = new boolean[2];

  public Recommender() {
  }

  public Recommender(
    String username,
    String recommenderName,
    String clientKey,
    String homepage,
    String repoName,
    String title,
    String description,
    String image,
    String video,
    Hashtable itemTypes,
    Vector displayItems,
    long numRecs,
    long maxRatingVal,
    String ratingsColumn,
    String primaryKey)
  {
    this();
    this.username = username;
    this.recommenderName = recommenderName;
    this.clientKey = clientKey;
    this.homepage = homepage;
    this.repoName = repoName;
    this.title = title;
    this.description = description;
    this.image = image;
    this.video = video;
    this.itemTypes = itemTypes;
    this.displayItems = displayItems;
    this.numRecs = numRecs;
    setNumRecsIsSet(true);
    this.maxRatingVal = maxRatingVal;
    setMaxRatingValIsSet(true);
    this.ratingsColumn = ratingsColumn;
    this.primaryKey = primaryKey;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Recommender(Recommender other) {
    System.arraycopy(other.__isset_vector, 0, __isset_vector, 0, other.__isset_vector.length);
    if (other.isSetUsername()) {
      this.username = other.username;
    }
    if (other.isSetRecommenderName()) {
      this.recommenderName = other.recommenderName;
    }
    if (other.isSetClientKey()) {
      this.clientKey = other.clientKey;
    }
    if (other.isSetHomepage()) {
      this.homepage = other.homepage;
    }
    if (other.isSetRepoName()) {
      this.repoName = other.repoName;
    }
    if (other.isSetTitle()) {
      this.title = other.title;
    }
    if (other.isSetDescription()) {
      this.description = other.description;
    }
    if (other.isSetImage()) {
      this.image = other.image;
    }
    if (other.isSetVideo()) {
      this.video = other.video;
    }
    if (other.isSetItemTypes()) {
      Hashtable __this__itemTypes = new Hashtable();
      for (Enumeration other_enum = other.itemTypes.keys(); other_enum.hasMoreElements(); ) {

        String other_element_key = (String)other_enum.nextElement();
        String other_element_value = (String)other.itemTypes.get(other_element_key);

        String __this__itemTypes_copy_key = other_element_key;

        String __this__itemTypes_copy_value = other_element_value;

        __this__itemTypes.put(__this__itemTypes_copy_key, __this__itemTypes_copy_value);
      }
      this.itemTypes = __this__itemTypes;
    }
    if (other.isSetDisplayItems()) {
      Vector __this__displayItems = new Vector();
      for (Enumeration other_enum = other.displayItems.elements(); other_enum.hasMoreElements(); ) {
        String other_element = (String)other_enum.nextElement();
        __this__displayItems.addElement(other_element);
      }
      this.displayItems = __this__displayItems;
    }
    this.numRecs = other.numRecs;
    this.maxRatingVal = other.maxRatingVal;
    if (other.isSetRatingsColumn()) {
      this.ratingsColumn = other.ratingsColumn;
    }
    if (other.isSetPrimaryKey()) {
      this.primaryKey = other.primaryKey;
    }
  }

  public Recommender deepCopy() {
    return new Recommender(this);
  }

  public void clear() {
    this.username = null;
    this.recommenderName = null;
    this.clientKey = null;
    this.homepage = null;
    this.repoName = null;
    this.title = null;
    this.description = null;
    this.image = null;
    this.video = null;
    this.itemTypes = null;
    this.displayItems = null;
    setNumRecsIsSet(false);
    this.numRecs = 0;
    setMaxRatingValIsSet(false);
    this.maxRatingVal = 0;
    this.ratingsColumn = null;
    this.primaryKey = null;
  }

  public String getUsername() {
    return this.username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public void unsetUsername() {
    this.username = null;
  }

  /** Returns true if field username is set (has been assigned a value) and false otherwise */
  public boolean isSetUsername() {
    return this.username != null;
  }

  public void setUsernameIsSet(boolean value) {
    if (!value) {
      this.username = null;
    }
  }

  public String getRecommenderName() {
    return this.recommenderName;
  }

  public void setRecommenderName(String recommenderName) {
    this.recommenderName = recommenderName;
  }

  public void unsetRecommenderName() {
    this.recommenderName = null;
  }

  /** Returns true if field recommenderName is set (has been assigned a value) and false otherwise */
  public boolean isSetRecommenderName() {
    return this.recommenderName != null;
  }

  public void setRecommenderNameIsSet(boolean value) {
    if (!value) {
      this.recommenderName = null;
    }
  }

  public String getClientKey() {
    return this.clientKey;
  }

  public void setClientKey(String clientKey) {
    this.clientKey = clientKey;
  }

  public void unsetClientKey() {
    this.clientKey = null;
  }

  /** Returns true if field clientKey is set (has been assigned a value) and false otherwise */
  public boolean isSetClientKey() {
    return this.clientKey != null;
  }

  public void setClientKeyIsSet(boolean value) {
    if (!value) {
      this.clientKey = null;
    }
  }

  public String getHomepage() {
    return this.homepage;
  }

  public void setHomepage(String homepage) {
    this.homepage = homepage;
  }

  public void unsetHomepage() {
    this.homepage = null;
  }

  /** Returns true if field homepage is set (has been assigned a value) and false otherwise */
  public boolean isSetHomepage() {
    return this.homepage != null;
  }

  public void setHomepageIsSet(boolean value) {
    if (!value) {
      this.homepage = null;
    }
  }

  public String getRepoName() {
    return this.repoName;
  }

  public void setRepoName(String repoName) {
    this.repoName = repoName;
  }

  public void unsetRepoName() {
    this.repoName = null;
  }

  /** Returns true if field repoName is set (has been assigned a value) and false otherwise */
  public boolean isSetRepoName() {
    return this.repoName != null;
  }

  public void setRepoNameIsSet(boolean value) {
    if (!value) {
      this.repoName = null;
    }
  }

  public String getTitle() {
    return this.title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public void unsetTitle() {
    this.title = null;
  }

  /** Returns true if field title is set (has been assigned a value) and false otherwise */
  public boolean isSetTitle() {
    return this.title != null;
  }

  public void setTitleIsSet(boolean value) {
    if (!value) {
      this.title = null;
    }
  }

  public String getDescription() {
    return this.description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public void unsetDescription() {
    this.description = null;
  }

  /** Returns true if field description is set (has been assigned a value) and false otherwise */
  public boolean isSetDescription() {
    return this.description != null;
  }

  public void setDescriptionIsSet(boolean value) {
    if (!value) {
      this.description = null;
    }
  }

  public String getImage() {
    return this.image;
  }

  public void setImage(String image) {
    this.image = image;
  }

  public void unsetImage() {
    this.image = null;
  }

  /** Returns true if field image is set (has been assigned a value) and false otherwise */
  public boolean isSetImage() {
    return this.image != null;
  }

  public void setImageIsSet(boolean value) {
    if (!value) {
      this.image = null;
    }
  }

  public String getVideo() {
    return this.video;
  }

  public void setVideo(String video) {
    this.video = video;
  }

  public void unsetVideo() {
    this.video = null;
  }

  /** Returns true if field video is set (has been assigned a value) and false otherwise */
  public boolean isSetVideo() {
    return this.video != null;
  }

  public void setVideoIsSet(boolean value) {
    if (!value) {
      this.video = null;
    }
  }

  public int getItemTypesSize() {
    return (this.itemTypes == null) ? 0 : this.itemTypes.size();
  }

  public void putToItemTypes(String key, String val) {
    if (this.itemTypes == null) {
      this.itemTypes = new Hashtable();
    }
    this.itemTypes.put(key, val);
  }

  public Hashtable getItemTypes() {
    return this.itemTypes;
  }

  public void setItemTypes(Hashtable itemTypes) {
    this.itemTypes = itemTypes;
  }

  public void unsetItemTypes() {
    this.itemTypes = null;
  }

  /** Returns true if field itemTypes is set (has been assigned a value) and false otherwise */
  public boolean isSetItemTypes() {
    return this.itemTypes != null;
  }

  public void setItemTypesIsSet(boolean value) {
    if (!value) {
      this.itemTypes = null;
    }
  }

  public int getDisplayItemsSize() {
    return (this.displayItems == null) ? 0 : this.displayItems.size();
  }

  public Enumeration getDisplayItemsEnumeration() {
    return (this.displayItems == null) ? null : this.displayItems.elements();
  }

  public void addToDisplayItems(String elem) {
    if (this.displayItems == null) {
      this.displayItems = new Vector();
    }
    this.displayItems.addElement(elem);
  }

  public Vector getDisplayItems() {
    return this.displayItems;
  }

  public void setDisplayItems(Vector displayItems) {
    this.displayItems = displayItems;
  }

  public void unsetDisplayItems() {
    this.displayItems = null;
  }

  /** Returns true if field displayItems is set (has been assigned a value) and false otherwise */
  public boolean isSetDisplayItems() {
    return this.displayItems != null;
  }

  public void setDisplayItemsIsSet(boolean value) {
    if (!value) {
      this.displayItems = null;
    }
  }

  public long getNumRecs() {
    return this.numRecs;
  }

  public void setNumRecs(long numRecs) {
    this.numRecs = numRecs;
    setNumRecsIsSet(true);
  }

  public void unsetNumRecs() {
    __isset_vector[__NUMRECS_ISSET_ID] = false;
  }

  /** Returns true if field numRecs is set (has been assigned a value) and false otherwise */
  public boolean isSetNumRecs() {
    return __isset_vector[__NUMRECS_ISSET_ID];
  }

  public void setNumRecsIsSet(boolean value) {
    __isset_vector[__NUMRECS_ISSET_ID] = value;
  }

  public long getMaxRatingVal() {
    return this.maxRatingVal;
  }

  public void setMaxRatingVal(long maxRatingVal) {
    this.maxRatingVal = maxRatingVal;
    setMaxRatingValIsSet(true);
  }

  public void unsetMaxRatingVal() {
    __isset_vector[__MAXRATINGVAL_ISSET_ID] = false;
  }

  /** Returns true if field maxRatingVal is set (has been assigned a value) and false otherwise */
  public boolean isSetMaxRatingVal() {
    return __isset_vector[__MAXRATINGVAL_ISSET_ID];
  }

  public void setMaxRatingValIsSet(boolean value) {
    __isset_vector[__MAXRATINGVAL_ISSET_ID] = value;
  }

  public String getRatingsColumn() {
    return this.ratingsColumn;
  }

  public void setRatingsColumn(String ratingsColumn) {
    this.ratingsColumn = ratingsColumn;
  }

  public void unsetRatingsColumn() {
    this.ratingsColumn = null;
  }

  /** Returns true if field ratingsColumn is set (has been assigned a value) and false otherwise */
  public boolean isSetRatingsColumn() {
    return this.ratingsColumn != null;
  }

  public void setRatingsColumnIsSet(boolean value) {
    if (!value) {
      this.ratingsColumn = null;
    }
  }

  public String getPrimaryKey() {
    return this.primaryKey;
  }

  public void setPrimaryKey(String primaryKey) {
    this.primaryKey = primaryKey;
  }

  public void unsetPrimaryKey() {
    this.primaryKey = null;
  }

  /** Returns true if field primaryKey is set (has been assigned a value) and false otherwise */
  public boolean isSetPrimaryKey() {
    return this.primaryKey != null;
  }

  public void setPrimaryKeyIsSet(boolean value) {
    if (!value) {
      this.primaryKey = null;
    }
  }

  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof Recommender)
      return this.equals((Recommender)that);
    return false;
  }

  public boolean equals(Recommender that) {
    if (that == null)
      return false;

    boolean this_present_username = true && this.isSetUsername();
    boolean that_present_username = true && that.isSetUsername();
    if (this_present_username || that_present_username) {
      if (!(this_present_username && that_present_username))
        return false;
      if (!this.username.equals(that.username))
        return false;
    }

    boolean this_present_recommenderName = true && this.isSetRecommenderName();
    boolean that_present_recommenderName = true && that.isSetRecommenderName();
    if (this_present_recommenderName || that_present_recommenderName) {
      if (!(this_present_recommenderName && that_present_recommenderName))
        return false;
      if (!this.recommenderName.equals(that.recommenderName))
        return false;
    }

    boolean this_present_clientKey = true && this.isSetClientKey();
    boolean that_present_clientKey = true && that.isSetClientKey();
    if (this_present_clientKey || that_present_clientKey) {
      if (!(this_present_clientKey && that_present_clientKey))
        return false;
      if (!this.clientKey.equals(that.clientKey))
        return false;
    }

    boolean this_present_homepage = true && this.isSetHomepage();
    boolean that_present_homepage = true && that.isSetHomepage();
    if (this_present_homepage || that_present_homepage) {
      if (!(this_present_homepage && that_present_homepage))
        return false;
      if (!this.homepage.equals(that.homepage))
        return false;
    }

    boolean this_present_repoName = true && this.isSetRepoName();
    boolean that_present_repoName = true && that.isSetRepoName();
    if (this_present_repoName || that_present_repoName) {
      if (!(this_present_repoName && that_present_repoName))
        return false;
      if (!this.repoName.equals(that.repoName))
        return false;
    }

    boolean this_present_title = true && this.isSetTitle();
    boolean that_present_title = true && that.isSetTitle();
    if (this_present_title || that_present_title) {
      if (!(this_present_title && that_present_title))
        return false;
      if (!this.title.equals(that.title))
        return false;
    }

    boolean this_present_description = true && this.isSetDescription();
    boolean that_present_description = true && that.isSetDescription();
    if (this_present_description || that_present_description) {
      if (!(this_present_description && that_present_description))
        return false;
      if (!this.description.equals(that.description))
        return false;
    }

    boolean this_present_image = true && this.isSetImage();
    boolean that_present_image = true && that.isSetImage();
    if (this_present_image || that_present_image) {
      if (!(this_present_image && that_present_image))
        return false;
      if (!this.image.equals(that.image))
        return false;
    }

    boolean this_present_video = true && this.isSetVideo();
    boolean that_present_video = true && that.isSetVideo();
    if (this_present_video || that_present_video) {
      if (!(this_present_video && that_present_video))
        return false;
      if (!this.video.equals(that.video))
        return false;
    }

    boolean this_present_itemTypes = true && this.isSetItemTypes();
    boolean that_present_itemTypes = true && that.isSetItemTypes();
    if (this_present_itemTypes || that_present_itemTypes) {
      if (!(this_present_itemTypes && that_present_itemTypes))
        return false;
      if (!this.itemTypes.equals(that.itemTypes))
        return false;
    }

    boolean this_present_displayItems = true && this.isSetDisplayItems();
    boolean that_present_displayItems = true && that.isSetDisplayItems();
    if (this_present_displayItems || that_present_displayItems) {
      if (!(this_present_displayItems && that_present_displayItems))
        return false;
      if (!this.displayItems.equals(that.displayItems))
        return false;
    }

    boolean this_present_numRecs = true;
    boolean that_present_numRecs = true;
    if (this_present_numRecs || that_present_numRecs) {
      if (!(this_present_numRecs && that_present_numRecs))
        return false;
      if (this.numRecs != that.numRecs)
        return false;
    }

    boolean this_present_maxRatingVal = true;
    boolean that_present_maxRatingVal = true;
    if (this_present_maxRatingVal || that_present_maxRatingVal) {
      if (!(this_present_maxRatingVal && that_present_maxRatingVal))
        return false;
      if (this.maxRatingVal != that.maxRatingVal)
        return false;
    }

    boolean this_present_ratingsColumn = true && this.isSetRatingsColumn();
    boolean that_present_ratingsColumn = true && that.isSetRatingsColumn();
    if (this_present_ratingsColumn || that_present_ratingsColumn) {
      if (!(this_present_ratingsColumn && that_present_ratingsColumn))
        return false;
      if (!this.ratingsColumn.equals(that.ratingsColumn))
        return false;
    }

    boolean this_present_primaryKey = true && this.isSetPrimaryKey();
    boolean that_present_primaryKey = true && that.isSetPrimaryKey();
    if (this_present_primaryKey || that_present_primaryKey) {
      if (!(this_present_primaryKey && that_present_primaryKey))
        return false;
      if (!this.primaryKey.equals(that.primaryKey))
        return false;
    }

    return true;
  }

  public int hashCode() {
    return 0;
  }

  public int compareTo(Object otherObject) {
    if (!getClass().equals(otherObject.getClass())) {
      return getClass().getName().compareTo(otherObject.getClass().getName());
    }

    Recommender other = (Recommender)otherObject;    int lastComparison = 0;

    lastComparison = TBaseHelper.compareTo(isSetUsername(), other.isSetUsername());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUsername()) {
      lastComparison = TBaseHelper.compareTo(this.username, other.username);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetRecommenderName(), other.isSetRecommenderName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecommenderName()) {
      lastComparison = TBaseHelper.compareTo(this.recommenderName, other.recommenderName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetClientKey(), other.isSetClientKey());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientKey()) {
      lastComparison = TBaseHelper.compareTo(this.clientKey, other.clientKey);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetHomepage(), other.isSetHomepage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHomepage()) {
      lastComparison = TBaseHelper.compareTo(this.homepage, other.homepage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetRepoName(), other.isSetRepoName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRepoName()) {
      lastComparison = TBaseHelper.compareTo(this.repoName, other.repoName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetTitle(), other.isSetTitle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTitle()) {
      lastComparison = TBaseHelper.compareTo(this.title, other.title);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetDescription(), other.isSetDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescription()) {
      lastComparison = TBaseHelper.compareTo(this.description, other.description);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetImage(), other.isSetImage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetImage()) {
      lastComparison = TBaseHelper.compareTo(this.image, other.image);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetVideo(), other.isSetVideo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVideo()) {
      lastComparison = TBaseHelper.compareTo(this.video, other.video);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetItemTypes(), other.isSetItemTypes());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetItemTypes()) {
      lastComparison = TBaseHelper.compareTo(this.itemTypes, other.itemTypes);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetDisplayItems(), other.isSetDisplayItems());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisplayItems()) {
      lastComparison = TBaseHelper.compareTo(this.displayItems, other.displayItems);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetNumRecs(), other.isSetNumRecs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumRecs()) {
      lastComparison = TBaseHelper.compareTo(this.numRecs, other.numRecs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetMaxRatingVal(), other.isSetMaxRatingVal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMaxRatingVal()) {
      lastComparison = TBaseHelper.compareTo(this.maxRatingVal, other.maxRatingVal);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetRatingsColumn(), other.isSetRatingsColumn());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRatingsColumn()) {
      lastComparison = TBaseHelper.compareTo(this.ratingsColumn, other.ratingsColumn);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPrimaryKey(), other.isSetPrimaryKey());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrimaryKey()) {
      lastComparison = TBaseHelper.compareTo(this.primaryKey, other.primaryKey);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // USERNAME
          if (field.type == TType.STRING) {
            this.username = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // RECOMMENDER_NAME
          if (field.type == TType.STRING) {
            this.recommenderName = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // CLIENT_KEY
          if (field.type == TType.STRING) {
            this.clientKey = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 4: // HOMEPAGE
          if (field.type == TType.STRING) {
            this.homepage = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 5: // REPO_NAME
          if (field.type == TType.STRING) {
            this.repoName = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 6: // TITLE
          if (field.type == TType.STRING) {
            this.title = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 7: // DESCRIPTION
          if (field.type == TType.STRING) {
            this.description = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 8: // IMAGE
          if (field.type == TType.STRING) {
            this.image = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 9: // VIDEO
          if (field.type == TType.STRING) {
            this.video = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 10: // ITEM_TYPES
          if (field.type == TType.MAP) {
            {
              TMap _map5 = iprot.readMapBegin();
              this.itemTypes = new Hashtable(2*_map5.size);
              for (int _i6 = 0; _i6 < _map5.size; ++_i6)
              {
                String _key7;
                String _val8;
                _key7 = iprot.readString();
                _val8 = iprot.readString();
                this.itemTypes.put(_key7, _val8);
              }
              iprot.readMapEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 11: // DISPLAY_ITEMS
          if (field.type == TType.LIST) {
            {
              TList _list9 = iprot.readListBegin();
              this.displayItems = new Vector(_list9.size);
              for (int _i10 = 0; _i10 < _list9.size; ++_i10)
              {
                String _elem11;
                _elem11 = iprot.readString();
                this.displayItems.addElement(_elem11);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 12: // NUM_RECS
          if (field.type == TType.I64) {
            this.numRecs = iprot.readI64();
            setNumRecsIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 13: // MAX_RATING_VAL
          if (field.type == TType.I64) {
            this.maxRatingVal = iprot.readI64();
            setMaxRatingValIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 14: // RATINGS_COLUMN
          if (field.type == TType.STRING) {
            this.ratingsColumn = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 15: // PRIMARY_KEY
          if (field.type == TType.STRING) {
            this.primaryKey = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    if (this.username != null) {
      oprot.writeFieldBegin(USERNAME_FIELD_DESC);
      oprot.writeString(this.username);
      oprot.writeFieldEnd();
    }
    if (this.recommenderName != null) {
      oprot.writeFieldBegin(RECOMMENDER_NAME_FIELD_DESC);
      oprot.writeString(this.recommenderName);
      oprot.writeFieldEnd();
    }
    if (this.clientKey != null) {
      oprot.writeFieldBegin(CLIENT_KEY_FIELD_DESC);
      oprot.writeString(this.clientKey);
      oprot.writeFieldEnd();
    }
    if (this.homepage != null) {
      oprot.writeFieldBegin(HOMEPAGE_FIELD_DESC);
      oprot.writeString(this.homepage);
      oprot.writeFieldEnd();
    }
    if (this.repoName != null) {
      oprot.writeFieldBegin(REPO_NAME_FIELD_DESC);
      oprot.writeString(this.repoName);
      oprot.writeFieldEnd();
    }
    if (this.title != null) {
      oprot.writeFieldBegin(TITLE_FIELD_DESC);
      oprot.writeString(this.title);
      oprot.writeFieldEnd();
    }
    if (this.description != null) {
      oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
      oprot.writeString(this.description);
      oprot.writeFieldEnd();
    }
    if (this.image != null) {
      oprot.writeFieldBegin(IMAGE_FIELD_DESC);
      oprot.writeString(this.image);
      oprot.writeFieldEnd();
    }
    if (this.video != null) {
      oprot.writeFieldBegin(VIDEO_FIELD_DESC);
      oprot.writeString(this.video);
      oprot.writeFieldEnd();
    }
    if (this.itemTypes != null) {
      oprot.writeFieldBegin(ITEM_TYPES_FIELD_DESC);
      {
        oprot.writeMapBegin(new TMap(TType.STRING, TType.STRING, this.itemTypes.size()));
        for (Enumeration _iter12_enum = this.itemTypes.keys(); _iter12_enum.hasMoreElements(); )         {
          String _iter12 = (String)_iter12_enum.nextElement();
          oprot.writeString(_iter12);
          oprot.writeString(((String)this.itemTypes.get(_iter12)));
        }
        oprot.writeMapEnd();
      }
      oprot.writeFieldEnd();
    }
    if (this.displayItems != null) {
      oprot.writeFieldBegin(DISPLAY_ITEMS_FIELD_DESC);
      {
        oprot.writeListBegin(new TList(TType.STRING, this.displayItems.size()));
        for (Enumeration _iter13_enum = this.displayItems.elements(); _iter13_enum.hasMoreElements(); )         {
          String _iter13 = (String)_iter13_enum.nextElement();
          oprot.writeString(_iter13);
        }
        oprot.writeListEnd();
      }
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(NUM_RECS_FIELD_DESC);
    oprot.writeI64(this.numRecs);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(MAX_RATING_VAL_FIELD_DESC);
    oprot.writeI64(this.maxRatingVal);
    oprot.writeFieldEnd();
    if (this.ratingsColumn != null) {
      oprot.writeFieldBegin(RATINGS_COLUMN_FIELD_DESC);
      oprot.writeString(this.ratingsColumn);
      oprot.writeFieldEnd();
    }
    if (this.primaryKey != null) {
      oprot.writeFieldBegin(PRIMARY_KEY_FIELD_DESC);
      oprot.writeString(this.primaryKey);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  public String toString() {
    StringBuffer sb = new StringBuffer("Recommender(");
    boolean first = true;

    sb.append("username:");
    if (this.username == null) {
      sb.append("null");
    } else {
      sb.append(this.username);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("recommenderName:");
    if (this.recommenderName == null) {
      sb.append("null");
    } else {
      sb.append(this.recommenderName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("clientKey:");
    if (this.clientKey == null) {
      sb.append("null");
    } else {
      sb.append(this.clientKey);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("homepage:");
    if (this.homepage == null) {
      sb.append("null");
    } else {
      sb.append(this.homepage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("repoName:");
    if (this.repoName == null) {
      sb.append("null");
    } else {
      sb.append(this.repoName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("title:");
    if (this.title == null) {
      sb.append("null");
    } else {
      sb.append(this.title);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("description:");
    if (this.description == null) {
      sb.append("null");
    } else {
      sb.append(this.description);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("image:");
    if (this.image == null) {
      sb.append("null");
    } else {
      sb.append(this.image);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("video:");
    if (this.video == null) {
      sb.append("null");
    } else {
      sb.append(this.video);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("itemTypes:");
    if (this.itemTypes == null) {
      sb.append("null");
    } else {
      sb.append(this.itemTypes);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("displayItems:");
    if (this.displayItems == null) {
      sb.append("null");
    } else {
      sb.append(this.displayItems);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("numRecs:");
    sb.append(this.numRecs);
    first = false;
    if (!first) sb.append(", ");
    sb.append("maxRatingVal:");
    sb.append(this.maxRatingVal);
    first = false;
    if (!first) sb.append(", ");
    sb.append("ratingsColumn:");
    if (this.ratingsColumn == null) {
      sb.append("null");
    } else {
      sb.append(this.ratingsColumn);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("primaryKey:");
    if (this.primaryKey == null) {
      sb.append("null");
    } else {
      sb.append(this.primaryKey);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
    if (!isSetUsername()) {
      throw new TProtocolException("Required field 'username' is unset! Struct:" + toString());
    }

    if (!isSetRecommenderName()) {
      throw new TProtocolException("Required field 'recommenderName' is unset! Struct:" + toString());
    }

    if (!isSetClientKey()) {
      throw new TProtocolException("Required field 'clientKey' is unset! Struct:" + toString());
    }

    if (!isSetHomepage()) {
      throw new TProtocolException("Required field 'homepage' is unset! Struct:" + toString());
    }

    if (!isSetRepoName()) {
      throw new TProtocolException("Required field 'repoName' is unset! Struct:" + toString());
    }

    if (!isSetTitle()) {
      throw new TProtocolException("Required field 'title' is unset! Struct:" + toString());
    }

    if (!isSetDescription()) {
      throw new TProtocolException("Required field 'description' is unset! Struct:" + toString());
    }

    if (!isSetImage()) {
      throw new TProtocolException("Required field 'image' is unset! Struct:" + toString());
    }

    if (!isSetNumRecs()) {
      throw new TProtocolException("Required field 'numRecs' is unset! Struct:" + toString());
    }

    if (!isSetMaxRatingVal()) {
      throw new TProtocolException("Required field 'maxRatingVal' is unset! Struct:" + toString());
    }

  }

}

