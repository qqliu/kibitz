(*
 Autogenerated by Thrift Compiler (0.9.1)

 DO NOT EDIT UNLESS YOU ARE SURE YOU KNOW WHAT YOU ARE DOING
*)

open Thrift
class item =
object (self)
  val mutable _attributes : (string,string) Hashtbl.t option = None
  method get_attributes = _attributes
  method grab_attributes = match _attributes with None->raise (Field_empty "item.attributes") | Some _x0 -> _x0
  method set_attributes _x0 = _attributes <- Some _x0
  method unset_attributes = _attributes <- None
  method reset_attributes = _attributes <- None

  val mutable _kibitz_generated_id : Int64.t option = None
  method get_kibitz_generated_id = _kibitz_generated_id
  method grab_kibitz_generated_id = match _kibitz_generated_id with None->raise (Field_empty "item.kibitz_generated_id") | Some _x1 -> _x1
  method set_kibitz_generated_id _x1 = _kibitz_generated_id <- Some _x1
  method unset_kibitz_generated_id = _kibitz_generated_id <- None
  method reset_kibitz_generated_id = _kibitz_generated_id <- None

  method copy =
      let _new = Oo.copy self in
      if _attributes <> None then
        _new#set_attributes (Hashtbl.copy self#grab_attributes);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "Item";
    (match _attributes with 
    | None -> raise (Field_empty "item._attributes")
    | Some _v -> 
      oprot#writeFieldBegin("attributes",Protocol.T_MAP,1);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRING,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter4 -> fun _viter5 -> 
        oprot#writeString(_kiter4);
        oprot#writeString(_viter5);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    (match _kibitz_generated_id with 
    | None -> raise (Field_empty "item._kibitz_generated_id")
    | Some _v -> 
      oprot#writeFieldBegin("kibitz_generated_id",Protocol.T_I64,2);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_item (iprot : Protocol.t) =
  let _str6 = new item in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t7,_id8) = iprot#readFieldBegin in
        if _t7 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id8 with 
          | 1 -> (if _t7 = Protocol.T_MAP then
              _str6#set_attributes 
                (let (_ktype10,_vtype11,_size9) = iprot#readMapBegin in
                let _con13 = Hashtbl.create _size9 in
                  for i = 1 to _size9 do
                    let _k = iprot#readString in
                    let _v = iprot#readString in
                      Hashtbl.add _con13 _k _v
                  done; iprot#readMapEnd; _con13)
            else
              iprot#skip _t7)
          | 2 -> (if _t7 = Protocol.T_I64 then
              _str6#set_kibitz_generated_id iprot#readI64
            else
              iprot#skip _t7)
          | _ -> iprot#skip _t7);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str6

class recommender =
object (self)
  val mutable _username : string option = None
  method get_username = _username
  method grab_username = match _username with None->raise (Field_empty "recommender.username") | Some _x15 -> _x15
  method set_username _x15 = _username <- Some _x15
  method unset_username = _username <- None
  method reset_username = _username <- None

  val mutable _recommenderName : string option = None
  method get_recommenderName = _recommenderName
  method grab_recommenderName = match _recommenderName with None->raise (Field_empty "recommender.recommenderName") | Some _x16 -> _x16
  method set_recommenderName _x16 = _recommenderName <- Some _x16
  method unset_recommenderName = _recommenderName <- None
  method reset_recommenderName = _recommenderName <- None

  val mutable _clientKey : string option = None
  method get_clientKey = _clientKey
  method grab_clientKey = match _clientKey with None->raise (Field_empty "recommender.clientKey") | Some _x17 -> _x17
  method set_clientKey _x17 = _clientKey <- Some _x17
  method unset_clientKey = _clientKey <- None
  method reset_clientKey = _clientKey <- None

  val mutable _homepage : string option = None
  method get_homepage = _homepage
  method grab_homepage = match _homepage with None->raise (Field_empty "recommender.homepage") | Some _x18 -> _x18
  method set_homepage _x18 = _homepage <- Some _x18
  method unset_homepage = _homepage <- None
  method reset_homepage = _homepage <- None

  val mutable _repoName : string option = None
  method get_repoName = _repoName
  method grab_repoName = match _repoName with None->raise (Field_empty "recommender.repoName") | Some _x19 -> _x19
  method set_repoName _x19 = _repoName <- Some _x19
  method unset_repoName = _repoName <- None
  method reset_repoName = _repoName <- None

  val mutable _title : string option = None
  method get_title = _title
  method grab_title = match _title with None->raise (Field_empty "recommender.title") | Some _x20 -> _x20
  method set_title _x20 = _title <- Some _x20
  method unset_title = _title <- None
  method reset_title = _title <- None

  val mutable _description : string option = None
  method get_description = _description
  method grab_description = match _description with None->raise (Field_empty "recommender.description") | Some _x21 -> _x21
  method set_description _x21 = _description <- Some _x21
  method unset_description = _description <- None
  method reset_description = _description <- None

  val mutable _image : string option = None
  method get_image = _image
  method grab_image = match _image with None->raise (Field_empty "recommender.image") | Some _x22 -> _x22
  method set_image _x22 = _image <- Some _x22
  method unset_image = _image <- None
  method reset_image = _image <- None

  val mutable _video : string option = None
  method get_video = _video
  method grab_video = match _video with None->raise (Field_empty "recommender.video") | Some _x23 -> _x23
  method set_video _x23 = _video <- Some _x23
  method unset_video = _video <- None
  method reset_video = _video <- None

  val mutable _itemTypes : (string,string) Hashtbl.t option = None
  method get_itemTypes = _itemTypes
  method grab_itemTypes = match _itemTypes with None->raise (Field_empty "recommender.itemTypes") | Some _x24 -> _x24
  method set_itemTypes _x24 = _itemTypes <- Some _x24
  method unset_itemTypes = _itemTypes <- None
  method reset_itemTypes = _itemTypes <- None

  val mutable _displayItems : string list option = None
  method get_displayItems = _displayItems
  method grab_displayItems = match _displayItems with None->raise (Field_empty "recommender.displayItems") | Some _x25 -> _x25
  method set_displayItems _x25 = _displayItems <- Some _x25
  method unset_displayItems = _displayItems <- None
  method reset_displayItems = _displayItems <- None

  val mutable _numRecs : Int64.t option = None
  method get_numRecs = _numRecs
  method grab_numRecs = match _numRecs with None->raise (Field_empty "recommender.numRecs") | Some _x26 -> _x26
  method set_numRecs _x26 = _numRecs <- Some _x26
  method unset_numRecs = _numRecs <- None
  method reset_numRecs = _numRecs <- None

  val mutable _maxRatingVal : Int64.t option = None
  method get_maxRatingVal = _maxRatingVal
  method grab_maxRatingVal = match _maxRatingVal with None->raise (Field_empty "recommender.maxRatingVal") | Some _x27 -> _x27
  method set_maxRatingVal _x27 = _maxRatingVal <- Some _x27
  method unset_maxRatingVal = _maxRatingVal <- None
  method reset_maxRatingVal = _maxRatingVal <- None

  val mutable _ratingsColumn : string option = None
  method get_ratingsColumn = _ratingsColumn
  method grab_ratingsColumn = match _ratingsColumn with None->raise (Field_empty "recommender.ratingsColumn") | Some _x28 -> _x28
  method set_ratingsColumn _x28 = _ratingsColumn <- Some _x28
  method unset_ratingsColumn = _ratingsColumn <- None
  method reset_ratingsColumn = _ratingsColumn <- None

  val mutable _primaryKey : string option = None
  method get_primaryKey = _primaryKey
  method grab_primaryKey = match _primaryKey with None->raise (Field_empty "recommender.primaryKey") | Some _x29 -> _x29
  method set_primaryKey _x29 = _primaryKey <- Some _x29
  method unset_primaryKey = _primaryKey <- None
  method reset_primaryKey = _primaryKey <- None

  method copy =
      let _new = Oo.copy self in
      if _itemTypes <> None then
        _new#set_itemTypes (Hashtbl.copy self#grab_itemTypes);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "Recommender";
    (match _username with 
    | None -> raise (Field_empty "recommender._username")
    | Some _v -> 
      oprot#writeFieldBegin("username",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _recommenderName with 
    | None -> raise (Field_empty "recommender._recommenderName")
    | Some _v -> 
      oprot#writeFieldBegin("recommenderName",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _clientKey with 
    | None -> raise (Field_empty "recommender._clientKey")
    | Some _v -> 
      oprot#writeFieldBegin("clientKey",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _homepage with 
    | None -> raise (Field_empty "recommender._homepage")
    | Some _v -> 
      oprot#writeFieldBegin("homepage",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _repoName with 
    | None -> raise (Field_empty "recommender._repoName")
    | Some _v -> 
      oprot#writeFieldBegin("repoName",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _title with 
    | None -> raise (Field_empty "recommender._title")
    | Some _v -> 
      oprot#writeFieldBegin("title",Protocol.T_STRING,6);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _description with 
    | None -> raise (Field_empty "recommender._description")
    | Some _v -> 
      oprot#writeFieldBegin("description",Protocol.T_STRING,7);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _image with 
    | None -> raise (Field_empty "recommender._image")
    | Some _v -> 
      oprot#writeFieldBegin("image",Protocol.T_STRING,8);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _video with None -> () | Some _v -> 
      oprot#writeFieldBegin("video",Protocol.T_STRING,9);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _itemTypes with None -> () | Some _v -> 
      oprot#writeFieldBegin("itemTypes",Protocol.T_MAP,10);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRING,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter32 -> fun _viter33 -> 
        oprot#writeString(_kiter32);
        oprot#writeString(_viter33);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    (match _displayItems with None -> () | Some _v -> 
      oprot#writeFieldBegin("displayItems",Protocol.T_LIST,11);
      oprot#writeListBegin(Protocol.T_STRING,List.length _v);
      List.iter (fun _iter34 ->         oprot#writeString(_iter34);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _numRecs with 
    | None -> raise (Field_empty "recommender._numRecs")
    | Some _v -> 
      oprot#writeFieldBegin("numRecs",Protocol.T_I64,12);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _maxRatingVal with 
    | None -> raise (Field_empty "recommender._maxRatingVal")
    | Some _v -> 
      oprot#writeFieldBegin("maxRatingVal",Protocol.T_I64,13);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _ratingsColumn with None -> () | Some _v -> 
      oprot#writeFieldBegin("ratingsColumn",Protocol.T_STRING,14);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _primaryKey with None -> () | Some _v -> 
      oprot#writeFieldBegin("primaryKey",Protocol.T_STRING,15);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_recommender (iprot : Protocol.t) =
  let _str35 = new recommender in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t36,_id37) = iprot#readFieldBegin in
        if _t36 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id37 with 
          | 1 -> (if _t36 = Protocol.T_STRING then
              _str35#set_username iprot#readString
            else
              iprot#skip _t36)
          | 2 -> (if _t36 = Protocol.T_STRING then
              _str35#set_recommenderName iprot#readString
            else
              iprot#skip _t36)
          | 3 -> (if _t36 = Protocol.T_STRING then
              _str35#set_clientKey iprot#readString
            else
              iprot#skip _t36)
          | 4 -> (if _t36 = Protocol.T_STRING then
              _str35#set_homepage iprot#readString
            else
              iprot#skip _t36)
          | 5 -> (if _t36 = Protocol.T_STRING then
              _str35#set_repoName iprot#readString
            else
              iprot#skip _t36)
          | 6 -> (if _t36 = Protocol.T_STRING then
              _str35#set_title iprot#readString
            else
              iprot#skip _t36)
          | 7 -> (if _t36 = Protocol.T_STRING then
              _str35#set_description iprot#readString
            else
              iprot#skip _t36)
          | 8 -> (if _t36 = Protocol.T_STRING then
              _str35#set_image iprot#readString
            else
              iprot#skip _t36)
          | 9 -> (if _t36 = Protocol.T_STRING then
              _str35#set_video iprot#readString
            else
              iprot#skip _t36)
          | 10 -> (if _t36 = Protocol.T_MAP then
              _str35#set_itemTypes 
                (let (_ktype39,_vtype40,_size38) = iprot#readMapBegin in
                let _con42 = Hashtbl.create _size38 in
                  for i = 1 to _size38 do
                    let _k = iprot#readString in
                    let _v = iprot#readString in
                      Hashtbl.add _con42 _k _v
                  done; iprot#readMapEnd; _con42)
            else
              iprot#skip _t36)
          | 11 -> (if _t36 = Protocol.T_LIST then
              _str35#set_displayItems 
                (let (_etype46,_size43) = iprot#readListBegin in
                  let _con47 = (Array.to_list (Array.init _size43 (fun _ -> iprot#readString))) in
                    iprot#readListEnd; _con47)
            else
              iprot#skip _t36)
          | 12 -> (if _t36 = Protocol.T_I64 then
              _str35#set_numRecs iprot#readI64
            else
              iprot#skip _t36)
          | 13 -> (if _t36 = Protocol.T_I64 then
              _str35#set_maxRatingVal iprot#readI64
            else
              iprot#skip _t36)
          | 14 -> (if _t36 = Protocol.T_STRING then
              _str35#set_ratingsColumn iprot#readString
            else
              iprot#skip _t36)
          | 15 -> (if _t36 = Protocol.T_STRING then
              _str35#set_primaryKey iprot#readString
            else
              iprot#skip _t36)
          | _ -> iprot#skip _t36);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str35

