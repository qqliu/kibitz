%%
%% Autogenerated by Thrift Compiler (0.9.2)
%%
%% DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
%%

-module(kibitz_types).

-include("kibitz_types.hrl").

-export([struct_info/1, struct_info_ext/1]).

struct_info('Item') ->
  {struct, [{1, {map, string, string}},
          {2, i64},
          {3, i32},
          {4, double}]}
;

struct_info('Recommender') ->
  {struct, [{1, string},
          {2, string},
          {3, string},
          {4, string},
          {5, string},
          {6, string},
          {7, string},
          {8, string},
          {9, string},
          {10, {map, string, string}},
          {11, {list, string}},
          {12, i64},
          {13, i64},
          {14, string},
          {15, string}]}
;

struct_info(_) -> erlang:error(function_clause).

struct_info_ext('Item') ->
  {struct, [{1, required, {map, string, string}, 'attributes', dict:new()},
          {2, required, i64, 'kibitz_generated_id', undefined},
          {3, required, i32, 'confidence', undefined},
          {4, required, double, 'predictedPreferences', undefined}]}
;

struct_info_ext('Recommender') ->
  {struct, [{1, required, string, 'username', undefined},
          {2, required, string, 'recommenderName', undefined},
          {3, required, string, 'clientKey', undefined},
          {4, required, string, 'homepage', undefined},
          {5, required, string, 'repoName', undefined},
          {6, required, string, 'title', undefined},
          {7, required, string, 'description', undefined},
          {8, required, string, 'image', undefined},
          {9, undefined, string, 'video', undefined},
          {10, undefined, {map, string, string}, 'itemTypes', dict:new()},
          {11, undefined, {list, string}, 'displayItems', []},
          {12, required, i64, 'numRecs', undefined},
          {13, required, i64, 'maxRatingVal', undefined},
          {14, undefined, string, 'ratingsColumn', undefined},
          {15, undefined, string, 'primaryKey', undefined}]}
;

struct_info_ext(_) -> erlang:error(function_clause).

