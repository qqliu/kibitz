%%
%% Autogenerated by Thrift Compiler (0.9.1)
%%
%% DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
%%

-module(recommenderService_thrift).
-behaviour(thrift_service).


-include("recommenderService_thrift.hrl").

-export([struct_info/1, function_info/2]).

struct_info('i am a dummy struct') -> undefined.
%%% interface
% createNewIndividualServer(This, Key)
function_info('createNewIndividualServer', params_type) ->
  {struct, [{1, string}]}
;
function_info('createNewIndividualServer', reply_type) ->
  {struct, []};
function_info('createNewIndividualServer', exceptions) ->
  {struct, []}
;
% terminateSession(This, Key)
function_info('terminateSession', params_type) ->
  {struct, [{1, string}]}
;
function_info('terminateSession', reply_type) ->
  {struct, []};
function_info('terminateSession', exceptions) ->
  {struct, []}
;
% makeRecommendation(This, Key, UserId, NumRecs, IsBoolean, DisplayColumns)
function_info('makeRecommendation', params_type) ->
  {struct, [{1, string},
          {2, i64},
          {3, i64},
          {4, bool},
          {5, {list, string}}]}
;
function_info('makeRecommendation', reply_type) ->
  {list, {struct, {'kibitz_types', 'item'}}};
function_info('makeRecommendation', exceptions) ->
  {struct, []}
;
% makeItemBasedRecommendations(This, Key, UserId, NumRecs, DisplayColumns)
function_info('makeItemBasedRecommendations', params_type) ->
  {struct, [{1, string},
          {2, i64},
          {3, i64},
          {4, {list, string}}]}
;
function_info('makeItemBasedRecommendations', reply_type) ->
  {list, {struct, {'kibitz_types', 'item'}}};
function_info('makeItemBasedRecommendations', exceptions) ->
  {struct, []}
;
% getPageItems(This, Key, Page, NumPerPage, DisplayColumns)
function_info('getPageItems', params_type) ->
  {struct, [{1, string},
          {2, i64},
          {3, i64},
          {4, {list, string}}]}
;
function_info('getPageItems', reply_type) ->
  {list, {struct, {'kibitz_types', 'item'}}};
function_info('getPageItems', exceptions) ->
  {struct, []}
;
% getItemCount(This, Key)
function_info('getItemCount', params_type) ->
  {struct, [{1, string}]}
;
function_info('getItemCount', reply_type) ->
  i64;
function_info('getItemCount', exceptions) ->
  {struct, []}
;
% recordRatings(This, Key, UserId, ItemId, Rating)
function_info('recordRatings', params_type) ->
  {struct, [{1, string},
          {2, i64},
          {3, i64},
          {4, i64}]}
;
function_info('recordRatings', reply_type) ->
  {struct, []};
function_info('recordRatings', exceptions) ->
  {struct, []}
;
% deleteRatings(This, Key, UserId, ItemId)
function_info('deleteRatings', params_type) ->
  {struct, [{1, string},
          {2, i64},
          {3, i64}]}
;
function_info('deleteRatings', reply_type) ->
  {struct, []};
function_info('deleteRatings', exceptions) ->
  {struct, []}
;
% createNewUser(This, Key, Username, Iskibitzuser)
function_info('createNewUser', params_type) ->
  {struct, [{1, string},
          {2, string},
          {3, bool}]}
;
function_info('createNewUser', reply_type) ->
  string;
function_info('createNewUser', exceptions) ->
  {struct, []}
;
% checkUsername(This, Key, Username, Iskibitzuser)
function_info('checkUsername', params_type) ->
  {struct, [{1, string},
          {2, string},
          {3, bool}]}
;
function_info('checkUsername', reply_type) ->
  bool;
function_info('checkUsername', exceptions) ->
  {struct, []}
;
% checkLogin(This, Key, Username, Password, Iskibitzuser)
function_info('checkLogin', params_type) ->
  {struct, [{1, string},
          {2, string},
          {3, string},
          {4, bool}]}
;
function_info('checkLogin', reply_type) ->
  bool;
function_info('checkLogin', exceptions) ->
  {struct, []}
;
% retrieveUserId(This, Key, Username)
function_info('retrieveUserId', params_type) ->
  {struct, [{1, string},
          {2, string}]}
;
function_info('retrieveUserId', reply_type) ->
  i64;
function_info('retrieveUserId', exceptions) ->
  {struct, []}
;
% createNewRecommender(This, Username, PrimaryKey, Database, Table, Title, Description, Image, Ratings_column, ClientKey)
function_info('createNewRecommender', params_type) ->
  {struct, [{1, string},
          {2, string},
          {3, string},
          {5, string},
          {6, string},
          {7, string},
          {8, string},
          {9, string},
          {10, string}]}
;
function_info('createNewRecommender', reply_type) ->
  bool;
function_info('createNewRecommender', exceptions) ->
  {struct, []}
;
% getUserRatedItems(This, Key, UserId, DisplayColumns)
function_info('getUserRatedItems', params_type) ->
  {struct, [{1, string},
          {2, i64},
          {3, {list, string}}]}
;
function_info('getUserRatedItems', reply_type) ->
  {list, {struct, {'kibitz_types', 'item'}}};
function_info('getUserRatedItems', exceptions) ->
  {struct, []}
;
% initiateModel(This, Key, Table, Username, Database)
function_info('initiateModel', params_type) ->
  {struct, [{1, string},
          {2, string},
          {3, string},
          {4, string}]}
;
function_info('initiateModel', reply_type) ->
  {struct, []};
function_info('initiateModel', exceptions) ->
  {struct, []}
;
% getSearchItems(This, Table, Query, ColumnsToSearch, DisplayColumns)
function_info('getSearchItems', params_type) ->
  {struct, [{1, string},
          {2, string},
          {3, {list, string}},
          {4, {list, string}}]}
;
function_info('getSearchItems', reply_type) ->
  {list, {struct, {'kibitz_types', 'item'}}};
function_info('getSearchItems', exceptions) ->
  {struct, []}
;
% makeOverallRatingBasedOrRandomRecommendation(This, Key, RatingColumnName, NumRecs, DisplayColumns)
function_info('makeOverallRatingBasedOrRandomRecommendation', params_type) ->
  {struct, [{1, string},
          {2, string},
          {3, i64},
          {4, {list, string}}]}
;
function_info('makeOverallRatingBasedOrRandomRecommendation', reply_type) ->
  {list, {struct, {'kibitz_types', 'item'}}};
function_info('makeOverallRatingBasedOrRandomRecommendation', exceptions) ->
  {struct, []}
;
% addKibitzUser(This, Email, Password)
function_info('addKibitzUser', params_type) ->
  {struct, [{1, string},
          {2, string}]}
;
function_info('addKibitzUser', reply_type) ->
  {struct, []};
function_info('addKibitzUser', exceptions) ->
  {struct, []}
;
% checkCorrectDatahubLogin(This, Username, Repository, Table, Primary_key, Title, Description, Image)
function_info('checkCorrectDatahubLogin', params_type) ->
  {struct, [{1, string},
          {2, string},
          {3, string},
          {4, string},
          {5, string},
          {6, string},
          {7, string}]}
;
function_info('checkCorrectDatahubLogin', reply_type) ->
  bool;
function_info('checkCorrectDatahubLogin', exceptions) ->
  {struct, []}
;
% checkRatingsColumn(This, Username, Table, Repository, Ratings_column)
function_info('checkRatingsColumn', params_type) ->
  {struct, [{1, string},
          {2, string},
          {3, string},
          {4, string}]}
;
function_info('checkRatingsColumn', reply_type) ->
  bool;
function_info('checkRatingsColumn', exceptions) ->
  {struct, []}
;
% getRecommenders(This, Username)
function_info('getRecommenders', params_type) ->
  {struct, [{1, string}]}
;
function_info('getRecommenders', reply_type) ->
  {list, {struct, {'kibitz_types', 'recommender'}}};
function_info('getRecommenders', exceptions) ->
  {struct, []}
;
% getProfilePicture(This, Username)
function_info('getProfilePicture', params_type) ->
  {struct, [{1, string}]}
;
function_info('getProfilePicture', reply_type) ->
  string;
function_info('getProfilePicture', exceptions) ->
  {struct, []}
;
% saveFBProfilePic(This, Username, FbUsername)
function_info('saveFBProfilePic', params_type) ->
  {struct, [{1, string},
          {2, string}]}
;
function_info('saveFBProfilePic', reply_type) ->
  {struct, []};
function_info('saveFBProfilePic', exceptions) ->
  {struct, []}
;
% deleteRecommender(This, ClientKey)
function_info('deleteRecommender', params_type) ->
  {struct, [{1, string}]}
;
function_info('deleteRecommender', reply_type) ->
  {struct, []};
function_info('deleteRecommender', exceptions) ->
  {struct, []}
;
% updateTemplate(This, Username, PrimaryKey, Title, Description, Image, Video, ItemTypes, DisplayItems, MaxRatingVal, NumRecs, RecommenderName, ClientKey, Homepage, CreatorName, RepoName, TableName, RatingsColumn)
function_info('updateTemplate', params_type) ->
  {struct, [{1, string},
          {2, string},
          {3, string},
          {4, string},
          {5, string},
          {6, string},
          {7, {map, string, string}},
          {8, {list, string}},
          {9, i64},
          {10, i64},
          {11, string},
          {12, string},
          {13, string},
          {14, string},
          {15, string},
          {16, string},
          {17, string}]}
;
function_info('updateTemplate', reply_type) ->
  {struct, []};
function_info('updateTemplate', exceptions) ->
  {struct, []}
;
% configurePrefilledUserRatings(This, Username, RepoName, PrimaryKey, ItemTable, TableName, UserIdCol, ItemIdCol, UserRatingCol)
function_info('configurePrefilledUserRatings', params_type) ->
  {struct, [{1, string},
          {2, string},
          {3, string},
          {4, string},
          {5, string},
          {6, string},
          {7, string},
          {8, string}]}
;
function_info('configurePrefilledUserRatings', reply_type) ->
  {struct, []};
function_info('configurePrefilledUserRatings', exceptions) ->
  {struct, []}
;
% getTables(This, Username, Repo)
function_info('getTables', params_type) ->
  {struct, [{1, string},
          {2, string}]}
;
function_info('getTables', reply_type) ->
  {list, string};
function_info('getTables', exceptions) ->
  {struct, []}
;
% getColumns(This, Username, Repo, Table)
function_info('getColumns', params_type) ->
  {struct, [{1, string},
          {2, string},
          {3, string}]}
;
function_info('getColumns', reply_type) ->
  {list, string};
function_info('getColumns', exceptions) ->
  {struct, []}
;
function_info(_Func, _Info) -> no_function.

