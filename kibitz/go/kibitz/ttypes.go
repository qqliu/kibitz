// Autogenerated by Thrift Compiler (0.9.1)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package kibitz

import (
	"fmt"
	"git.apache.org/thrift.git/lib/go/thrift"
	"math"
)

// (needed to ensure safety because of naive import list construction.)
var _ = math.MinInt32
var _ = thrift.ZERO
var _ = fmt.Printf

var GoUnusedProtection__ int

type Item struct {
	Attributes        map[string]string `thrift:"attributes,1,required"`
	KibitzGeneratedId int64             `thrift:"kibitz_generated_id,2,required"`
}

func NewItem() *Item {
	return &Item{}
}

func (p *Item) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return fmt.Errorf("%T read error", p)
	}
	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return fmt.Errorf("%T field %d read error: %s", p, fieldId, err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.readField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.readField2(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return fmt.Errorf("%T read struct end error: %s", p, err)
	}
	return nil
}

func (p *Item) readField1(iprot thrift.TProtocol) error {
	_, _, size, err := iprot.ReadMapBegin()
	if err != nil {
		return fmt.Errorf("error reading map begin: %s")
	}
	p.Attributes = make(map[string]string, size)
	for i := 0; i < size; i++ {
		var _key0 string
		if v, err := iprot.ReadString(); err != nil {
			return fmt.Errorf("error reading field 0: %s")
		} else {
			_key0 = v
		}
		var _val1 string
		if v, err := iprot.ReadString(); err != nil {
			return fmt.Errorf("error reading field 0: %s")
		} else {
			_val1 = v
		}
		p.Attributes[_key0] = _val1
	}
	if err := iprot.ReadMapEnd(); err != nil {
		return fmt.Errorf("error reading map end: %s")
	}
	return nil
}

func (p *Item) readField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return fmt.Errorf("error reading field 2: %s")
	} else {
		p.KibitzGeneratedId = v
	}
	return nil
}

func (p *Item) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("Item"); err != nil {
		return fmt.Errorf("%T write struct begin error: %s", p, err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return fmt.Errorf("%T write field stop error: %s", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return fmt.Errorf("%T write struct stop error: %s", err)
	}
	return nil
}

func (p *Item) writeField1(oprot thrift.TProtocol) (err error) {
	if p.Attributes != nil {
		if err := oprot.WriteFieldBegin("attributes", thrift.MAP, 1); err != nil {
			return fmt.Errorf("%T write field begin error 1:attributes: %s", p, err)
		}
		if err := oprot.WriteMapBegin(thrift.STRING, thrift.STRING, len(p.Attributes)); err != nil {
			return fmt.Errorf("error writing map begin: %s")
		}
		for k, v := range p.Attributes {
			if err := oprot.WriteString(string(k)); err != nil {
				return fmt.Errorf("%T. (0) field write error: %s", p)
			}
			if err := oprot.WriteString(string(v)); err != nil {
				return fmt.Errorf("%T. (0) field write error: %s", p)
			}
		}
		if err := oprot.WriteMapEnd(); err != nil {
			return fmt.Errorf("error writing map end: %s")
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 1:attributes: %s", p, err)
		}
	}
	return err
}

func (p *Item) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("kibitz_generated_id", thrift.I64, 2); err != nil {
		return fmt.Errorf("%T write field begin error 2:kibitz_generated_id: %s", p, err)
	}
	if err := oprot.WriteI64(int64(p.KibitzGeneratedId)); err != nil {
		return fmt.Errorf("%T.kibitz_generated_id (2) field write error: %s", p)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 2:kibitz_generated_id: %s", p, err)
	}
	return err
}

func (p *Item) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("Item(%+v)", *p)
}

type Recommender struct {
	Username        string            `thrift:"username,1,required"`
	RecommenderName string            `thrift:"recommenderName,2,required"`
	ClientKey       string            `thrift:"clientKey,3,required"`
	Homepage        string            `thrift:"homepage,4,required"`
	RepoName        string            `thrift:"repoName,5,required"`
	Title           string            `thrift:"title,6,required"`
	Description     string            `thrift:"description,7,required"`
	Image           string            `thrift:"image,8,required"`
	Video           string            `thrift:"video,9"`
	ItemTypes       map[string]string `thrift:"itemTypes,10"`
	DisplayItems    []string          `thrift:"displayItems,11"`
	NumRecs         int64             `thrift:"numRecs,12,required"`
	MaxRatingVal    int64             `thrift:"maxRatingVal,13,required"`
	RatingsColumn   string            `thrift:"ratingsColumn,14"`
	PrimaryKey      string            `thrift:"primaryKey,15"`
}

func NewRecommender() *Recommender {
	return &Recommender{}
}

func (p *Recommender) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return fmt.Errorf("%T read error", p)
	}
	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return fmt.Errorf("%T field %d read error: %s", p, fieldId, err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.readField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.readField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.readField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.readField4(iprot); err != nil {
				return err
			}
		case 5:
			if err := p.readField5(iprot); err != nil {
				return err
			}
		case 6:
			if err := p.readField6(iprot); err != nil {
				return err
			}
		case 7:
			if err := p.readField7(iprot); err != nil {
				return err
			}
		case 8:
			if err := p.readField8(iprot); err != nil {
				return err
			}
		case 9:
			if err := p.readField9(iprot); err != nil {
				return err
			}
		case 10:
			if err := p.readField10(iprot); err != nil {
				return err
			}
		case 11:
			if err := p.readField11(iprot); err != nil {
				return err
			}
		case 12:
			if err := p.readField12(iprot); err != nil {
				return err
			}
		case 13:
			if err := p.readField13(iprot); err != nil {
				return err
			}
		case 14:
			if err := p.readField14(iprot); err != nil {
				return err
			}
		case 15:
			if err := p.readField15(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return fmt.Errorf("%T read struct end error: %s", p, err)
	}
	return nil
}

func (p *Recommender) readField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 1: %s")
	} else {
		p.Username = v
	}
	return nil
}

func (p *Recommender) readField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 2: %s")
	} else {
		p.RecommenderName = v
	}
	return nil
}

func (p *Recommender) readField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 3: %s")
	} else {
		p.ClientKey = v
	}
	return nil
}

func (p *Recommender) readField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 4: %s")
	} else {
		p.Homepage = v
	}
	return nil
}

func (p *Recommender) readField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 5: %s")
	} else {
		p.RepoName = v
	}
	return nil
}

func (p *Recommender) readField6(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 6: %s")
	} else {
		p.Title = v
	}
	return nil
}

func (p *Recommender) readField7(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 7: %s")
	} else {
		p.Description = v
	}
	return nil
}

func (p *Recommender) readField8(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 8: %s")
	} else {
		p.Image = v
	}
	return nil
}

func (p *Recommender) readField9(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 9: %s")
	} else {
		p.Video = v
	}
	return nil
}

func (p *Recommender) readField10(iprot thrift.TProtocol) error {
	_, _, size, err := iprot.ReadMapBegin()
	if err != nil {
		return fmt.Errorf("error reading map begin: %s")
	}
	p.ItemTypes = make(map[string]string, size)
	for i := 0; i < size; i++ {
		var _key2 string
		if v, err := iprot.ReadString(); err != nil {
			return fmt.Errorf("error reading field 0: %s")
		} else {
			_key2 = v
		}
		var _val3 string
		if v, err := iprot.ReadString(); err != nil {
			return fmt.Errorf("error reading field 0: %s")
		} else {
			_val3 = v
		}
		p.ItemTypes[_key2] = _val3
	}
	if err := iprot.ReadMapEnd(); err != nil {
		return fmt.Errorf("error reading map end: %s")
	}
	return nil
}

func (p *Recommender) readField11(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return fmt.Errorf("error reading list being: %s")
	}
	p.DisplayItems = make([]string, 0, size)
	for i := 0; i < size; i++ {
		var _elem4 string
		if v, err := iprot.ReadString(); err != nil {
			return fmt.Errorf("error reading field 0: %s")
		} else {
			_elem4 = v
		}
		p.DisplayItems = append(p.DisplayItems, _elem4)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return fmt.Errorf("error reading list end: %s")
	}
	return nil
}

func (p *Recommender) readField12(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return fmt.Errorf("error reading field 12: %s")
	} else {
		p.NumRecs = v
	}
	return nil
}

func (p *Recommender) readField13(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return fmt.Errorf("error reading field 13: %s")
	} else {
		p.MaxRatingVal = v
	}
	return nil
}

func (p *Recommender) readField14(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 14: %s")
	} else {
		p.RatingsColumn = v
	}
	return nil
}

func (p *Recommender) readField15(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 15: %s")
	} else {
		p.PrimaryKey = v
	}
	return nil
}

func (p *Recommender) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("Recommender"); err != nil {
		return fmt.Errorf("%T write struct begin error: %s", p, err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := p.writeField4(oprot); err != nil {
		return err
	}
	if err := p.writeField5(oprot); err != nil {
		return err
	}
	if err := p.writeField6(oprot); err != nil {
		return err
	}
	if err := p.writeField7(oprot); err != nil {
		return err
	}
	if err := p.writeField8(oprot); err != nil {
		return err
	}
	if err := p.writeField9(oprot); err != nil {
		return err
	}
	if err := p.writeField10(oprot); err != nil {
		return err
	}
	if err := p.writeField11(oprot); err != nil {
		return err
	}
	if err := p.writeField12(oprot); err != nil {
		return err
	}
	if err := p.writeField13(oprot); err != nil {
		return err
	}
	if err := p.writeField14(oprot); err != nil {
		return err
	}
	if err := p.writeField15(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return fmt.Errorf("%T write field stop error: %s", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return fmt.Errorf("%T write struct stop error: %s", err)
	}
	return nil
}

func (p *Recommender) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("username", thrift.STRING, 1); err != nil {
		return fmt.Errorf("%T write field begin error 1:username: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Username)); err != nil {
		return fmt.Errorf("%T.username (1) field write error: %s", p)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 1:username: %s", p, err)
	}
	return err
}

func (p *Recommender) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("recommenderName", thrift.STRING, 2); err != nil {
		return fmt.Errorf("%T write field begin error 2:recommenderName: %s", p, err)
	}
	if err := oprot.WriteString(string(p.RecommenderName)); err != nil {
		return fmt.Errorf("%T.recommenderName (2) field write error: %s", p)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 2:recommenderName: %s", p, err)
	}
	return err
}

func (p *Recommender) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("clientKey", thrift.STRING, 3); err != nil {
		return fmt.Errorf("%T write field begin error 3:clientKey: %s", p, err)
	}
	if err := oprot.WriteString(string(p.ClientKey)); err != nil {
		return fmt.Errorf("%T.clientKey (3) field write error: %s", p)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 3:clientKey: %s", p, err)
	}
	return err
}

func (p *Recommender) writeField4(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("homepage", thrift.STRING, 4); err != nil {
		return fmt.Errorf("%T write field begin error 4:homepage: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Homepage)); err != nil {
		return fmt.Errorf("%T.homepage (4) field write error: %s", p)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 4:homepage: %s", p, err)
	}
	return err
}

func (p *Recommender) writeField5(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("repoName", thrift.STRING, 5); err != nil {
		return fmt.Errorf("%T write field begin error 5:repoName: %s", p, err)
	}
	if err := oprot.WriteString(string(p.RepoName)); err != nil {
		return fmt.Errorf("%T.repoName (5) field write error: %s", p)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 5:repoName: %s", p, err)
	}
	return err
}

func (p *Recommender) writeField6(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("title", thrift.STRING, 6); err != nil {
		return fmt.Errorf("%T write field begin error 6:title: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Title)); err != nil {
		return fmt.Errorf("%T.title (6) field write error: %s", p)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 6:title: %s", p, err)
	}
	return err
}

func (p *Recommender) writeField7(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("description", thrift.STRING, 7); err != nil {
		return fmt.Errorf("%T write field begin error 7:description: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Description)); err != nil {
		return fmt.Errorf("%T.description (7) field write error: %s", p)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 7:description: %s", p, err)
	}
	return err
}

func (p *Recommender) writeField8(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("image", thrift.STRING, 8); err != nil {
		return fmt.Errorf("%T write field begin error 8:image: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Image)); err != nil {
		return fmt.Errorf("%T.image (8) field write error: %s", p)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 8:image: %s", p, err)
	}
	return err
}

func (p *Recommender) writeField9(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("video", thrift.STRING, 9); err != nil {
		return fmt.Errorf("%T write field begin error 9:video: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Video)); err != nil {
		return fmt.Errorf("%T.video (9) field write error: %s", p)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 9:video: %s", p, err)
	}
	return err
}

func (p *Recommender) writeField10(oprot thrift.TProtocol) (err error) {
	if p.ItemTypes != nil {
		if err := oprot.WriteFieldBegin("itemTypes", thrift.MAP, 10); err != nil {
			return fmt.Errorf("%T write field begin error 10:itemTypes: %s", p, err)
		}
		if err := oprot.WriteMapBegin(thrift.STRING, thrift.STRING, len(p.ItemTypes)); err != nil {
			return fmt.Errorf("error writing map begin: %s")
		}
		for k, v := range p.ItemTypes {
			if err := oprot.WriteString(string(k)); err != nil {
				return fmt.Errorf("%T. (0) field write error: %s", p)
			}
			if err := oprot.WriteString(string(v)); err != nil {
				return fmt.Errorf("%T. (0) field write error: %s", p)
			}
		}
		if err := oprot.WriteMapEnd(); err != nil {
			return fmt.Errorf("error writing map end: %s")
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 10:itemTypes: %s", p, err)
		}
	}
	return err
}

func (p *Recommender) writeField11(oprot thrift.TProtocol) (err error) {
	if p.DisplayItems != nil {
		if err := oprot.WriteFieldBegin("displayItems", thrift.LIST, 11); err != nil {
			return fmt.Errorf("%T write field begin error 11:displayItems: %s", p, err)
		}
		if err := oprot.WriteListBegin(thrift.STRING, len(p.DisplayItems)); err != nil {
			return fmt.Errorf("error writing list begin: %s")
		}
		for _, v := range p.DisplayItems {
			if err := oprot.WriteString(string(v)); err != nil {
				return fmt.Errorf("%T. (0) field write error: %s", p)
			}
		}
		if err := oprot.WriteListEnd(); err != nil {
			return fmt.Errorf("error writing list end: %s")
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 11:displayItems: %s", p, err)
		}
	}
	return err
}

func (p *Recommender) writeField12(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("numRecs", thrift.I64, 12); err != nil {
		return fmt.Errorf("%T write field begin error 12:numRecs: %s", p, err)
	}
	if err := oprot.WriteI64(int64(p.NumRecs)); err != nil {
		return fmt.Errorf("%T.numRecs (12) field write error: %s", p)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 12:numRecs: %s", p, err)
	}
	return err
}

func (p *Recommender) writeField13(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("maxRatingVal", thrift.I64, 13); err != nil {
		return fmt.Errorf("%T write field begin error 13:maxRatingVal: %s", p, err)
	}
	if err := oprot.WriteI64(int64(p.MaxRatingVal)); err != nil {
		return fmt.Errorf("%T.maxRatingVal (13) field write error: %s", p)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 13:maxRatingVal: %s", p, err)
	}
	return err
}

func (p *Recommender) writeField14(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("ratingsColumn", thrift.STRING, 14); err != nil {
		return fmt.Errorf("%T write field begin error 14:ratingsColumn: %s", p, err)
	}
	if err := oprot.WriteString(string(p.RatingsColumn)); err != nil {
		return fmt.Errorf("%T.ratingsColumn (14) field write error: %s", p)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 14:ratingsColumn: %s", p, err)
	}
	return err
}

func (p *Recommender) writeField15(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("primaryKey", thrift.STRING, 15); err != nil {
		return fmt.Errorf("%T write field begin error 15:primaryKey: %s", p, err)
	}
	if err := oprot.WriteString(string(p.PrimaryKey)); err != nil {
		return fmt.Errorf("%T.primaryKey (15) field write error: %s", p)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 15:primaryKey: %s", p, err)
	}
	return err
}

func (p *Recommender) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("Recommender(%+v)", *p)
}
