/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package kibitz;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2015-9-9")
public class Recommender implements org.apache.thrift.TBase<Recommender, Recommender._Fields>, java.io.Serializable, Cloneable, Comparable<Recommender> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Recommender");

  private static final org.apache.thrift.protocol.TField USERNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("username", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField RECOMMENDER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("recommenderName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField CLIENT_KEY_FIELD_DESC = new org.apache.thrift.protocol.TField("clientKey", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField HOMEPAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("homepage", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField REPO_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("repoName", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField TITLE_FIELD_DESC = new org.apache.thrift.protocol.TField("title", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("description", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField IMAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("image", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField VIDEO_FIELD_DESC = new org.apache.thrift.protocol.TField("video", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField ITEM_TYPES_FIELD_DESC = new org.apache.thrift.protocol.TField("itemTypes", org.apache.thrift.protocol.TType.MAP, (short)10);
  private static final org.apache.thrift.protocol.TField DISPLAY_ITEMS_FIELD_DESC = new org.apache.thrift.protocol.TField("displayItems", org.apache.thrift.protocol.TType.LIST, (short)11);
  private static final org.apache.thrift.protocol.TField NUM_RECS_FIELD_DESC = new org.apache.thrift.protocol.TField("numRecs", org.apache.thrift.protocol.TType.I64, (short)12);
  private static final org.apache.thrift.protocol.TField MAX_RATING_VAL_FIELD_DESC = new org.apache.thrift.protocol.TField("maxRatingVal", org.apache.thrift.protocol.TType.I64, (short)13);
  private static final org.apache.thrift.protocol.TField RATINGS_COLUMN_FIELD_DESC = new org.apache.thrift.protocol.TField("ratingsColumn", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField PRIMARY_KEY_FIELD_DESC = new org.apache.thrift.protocol.TField("primaryKey", org.apache.thrift.protocol.TType.STRING, (short)15);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new RecommenderStandardSchemeFactory());
    schemes.put(TupleScheme.class, new RecommenderTupleSchemeFactory());
  }

  public String username; // required
  public String recommenderName; // required
  public String clientKey; // required
  public String homepage; // required
  public String repoName; // required
  public String title; // required
  public String description; // required
  public String image; // required
  public String video; // required
  public Map<String,String> itemTypes; // required
  public List<String> displayItems; // required
  public long numRecs; // required
  public long maxRatingVal; // required
  public String ratingsColumn; // required
  public String primaryKey; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    USERNAME((short)1, "username"),
    RECOMMENDER_NAME((short)2, "recommenderName"),
    CLIENT_KEY((short)3, "clientKey"),
    HOMEPAGE((short)4, "homepage"),
    REPO_NAME((short)5, "repoName"),
    TITLE((short)6, "title"),
    DESCRIPTION((short)7, "description"),
    IMAGE((short)8, "image"),
    VIDEO((short)9, "video"),
    ITEM_TYPES((short)10, "itemTypes"),
    DISPLAY_ITEMS((short)11, "displayItems"),
    NUM_RECS((short)12, "numRecs"),
    MAX_RATING_VAL((short)13, "maxRatingVal"),
    RATINGS_COLUMN((short)14, "ratingsColumn"),
    PRIMARY_KEY((short)15, "primaryKey");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // USERNAME
          return USERNAME;
        case 2: // RECOMMENDER_NAME
          return RECOMMENDER_NAME;
        case 3: // CLIENT_KEY
          return CLIENT_KEY;
        case 4: // HOMEPAGE
          return HOMEPAGE;
        case 5: // REPO_NAME
          return REPO_NAME;
        case 6: // TITLE
          return TITLE;
        case 7: // DESCRIPTION
          return DESCRIPTION;
        case 8: // IMAGE
          return IMAGE;
        case 9: // VIDEO
          return VIDEO;
        case 10: // ITEM_TYPES
          return ITEM_TYPES;
        case 11: // DISPLAY_ITEMS
          return DISPLAY_ITEMS;
        case 12: // NUM_RECS
          return NUM_RECS;
        case 13: // MAX_RATING_VAL
          return MAX_RATING_VAL;
        case 14: // RATINGS_COLUMN
          return RATINGS_COLUMN;
        case 15: // PRIMARY_KEY
          return PRIMARY_KEY;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __NUMRECS_ISSET_ID = 0;
  private static final int __MAXRATINGVAL_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.USERNAME, new org.apache.thrift.meta_data.FieldMetaData("username", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RECOMMENDER_NAME, new org.apache.thrift.meta_data.FieldMetaData("recommenderName", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CLIENT_KEY, new org.apache.thrift.meta_data.FieldMetaData("clientKey", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.HOMEPAGE, new org.apache.thrift.meta_data.FieldMetaData("homepage", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REPO_NAME, new org.apache.thrift.meta_data.FieldMetaData("repoName", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TITLE, new org.apache.thrift.meta_data.FieldMetaData("title", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("description", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IMAGE, new org.apache.thrift.meta_data.FieldMetaData("image", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VIDEO, new org.apache.thrift.meta_data.FieldMetaData("video", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ITEM_TYPES, new org.apache.thrift.meta_data.FieldMetaData("itemTypes", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.DISPLAY_ITEMS, new org.apache.thrift.meta_data.FieldMetaData("displayItems", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.NUM_RECS, new org.apache.thrift.meta_data.FieldMetaData("numRecs", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.MAX_RATING_VAL, new org.apache.thrift.meta_data.FieldMetaData("maxRatingVal", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.RATINGS_COLUMN, new org.apache.thrift.meta_data.FieldMetaData("ratingsColumn", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRIMARY_KEY, new org.apache.thrift.meta_data.FieldMetaData("primaryKey", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Recommender.class, metaDataMap);
  }

  public Recommender() {
  }

  public Recommender(
    String username,
    String recommenderName,
    String clientKey,
    String homepage,
    String repoName,
    String title,
    String description,
    String image,
    String video,
    Map<String,String> itemTypes,
    List<String> displayItems,
    long numRecs,
    long maxRatingVal,
    String ratingsColumn,
    String primaryKey)
  {
    this();
    this.username = username;
    this.recommenderName = recommenderName;
    this.clientKey = clientKey;
    this.homepage = homepage;
    this.repoName = repoName;
    this.title = title;
    this.description = description;
    this.image = image;
    this.video = video;
    this.itemTypes = itemTypes;
    this.displayItems = displayItems;
    this.numRecs = numRecs;
    setNumRecsIsSet(true);
    this.maxRatingVal = maxRatingVal;
    setMaxRatingValIsSet(true);
    this.ratingsColumn = ratingsColumn;
    this.primaryKey = primaryKey;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Recommender(Recommender other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetUsername()) {
      this.username = other.username;
    }
    if (other.isSetRecommenderName()) {
      this.recommenderName = other.recommenderName;
    }
    if (other.isSetClientKey()) {
      this.clientKey = other.clientKey;
    }
    if (other.isSetHomepage()) {
      this.homepage = other.homepage;
    }
    if (other.isSetRepoName()) {
      this.repoName = other.repoName;
    }
    if (other.isSetTitle()) {
      this.title = other.title;
    }
    if (other.isSetDescription()) {
      this.description = other.description;
    }
    if (other.isSetImage()) {
      this.image = other.image;
    }
    if (other.isSetVideo()) {
      this.video = other.video;
    }
    if (other.isSetItemTypes()) {
      Map<String,String> __this__itemTypes = new HashMap<String,String>(other.itemTypes);
      this.itemTypes = __this__itemTypes;
    }
    if (other.isSetDisplayItems()) {
      List<String> __this__displayItems = new ArrayList<String>(other.displayItems);
      this.displayItems = __this__displayItems;
    }
    this.numRecs = other.numRecs;
    this.maxRatingVal = other.maxRatingVal;
    if (other.isSetRatingsColumn()) {
      this.ratingsColumn = other.ratingsColumn;
    }
    if (other.isSetPrimaryKey()) {
      this.primaryKey = other.primaryKey;
    }
  }

  public Recommender deepCopy() {
    return new Recommender(this);
  }

  @Override
  public void clear() {
    this.username = null;
    this.recommenderName = null;
    this.clientKey = null;
    this.homepage = null;
    this.repoName = null;
    this.title = null;
    this.description = null;
    this.image = null;
    this.video = null;
    this.itemTypes = null;
    this.displayItems = null;
    setNumRecsIsSet(false);
    this.numRecs = 0;
    setMaxRatingValIsSet(false);
    this.maxRatingVal = 0;
    this.ratingsColumn = null;
    this.primaryKey = null;
  }

  public String getUsername() {
    return this.username;
  }

  public Recommender setUsername(String username) {
    this.username = username;
    return this;
  }

  public void unsetUsername() {
    this.username = null;
  }

  /** Returns true if field username is set (has been assigned a value) and false otherwise */
  public boolean isSetUsername() {
    return this.username != null;
  }

  public void setUsernameIsSet(boolean value) {
    if (!value) {
      this.username = null;
    }
  }

  public String getRecommenderName() {
    return this.recommenderName;
  }

  public Recommender setRecommenderName(String recommenderName) {
    this.recommenderName = recommenderName;
    return this;
  }

  public void unsetRecommenderName() {
    this.recommenderName = null;
  }

  /** Returns true if field recommenderName is set (has been assigned a value) and false otherwise */
  public boolean isSetRecommenderName() {
    return this.recommenderName != null;
  }

  public void setRecommenderNameIsSet(boolean value) {
    if (!value) {
      this.recommenderName = null;
    }
  }

  public String getClientKey() {
    return this.clientKey;
  }

  public Recommender setClientKey(String clientKey) {
    this.clientKey = clientKey;
    return this;
  }

  public void unsetClientKey() {
    this.clientKey = null;
  }

  /** Returns true if field clientKey is set (has been assigned a value) and false otherwise */
  public boolean isSetClientKey() {
    return this.clientKey != null;
  }

  public void setClientKeyIsSet(boolean value) {
    if (!value) {
      this.clientKey = null;
    }
  }

  public String getHomepage() {
    return this.homepage;
  }

  public Recommender setHomepage(String homepage) {
    this.homepage = homepage;
    return this;
  }

  public void unsetHomepage() {
    this.homepage = null;
  }

  /** Returns true if field homepage is set (has been assigned a value) and false otherwise */
  public boolean isSetHomepage() {
    return this.homepage != null;
  }

  public void setHomepageIsSet(boolean value) {
    if (!value) {
      this.homepage = null;
    }
  }

  public String getRepoName() {
    return this.repoName;
  }

  public Recommender setRepoName(String repoName) {
    this.repoName = repoName;
    return this;
  }

  public void unsetRepoName() {
    this.repoName = null;
  }

  /** Returns true if field repoName is set (has been assigned a value) and false otherwise */
  public boolean isSetRepoName() {
    return this.repoName != null;
  }

  public void setRepoNameIsSet(boolean value) {
    if (!value) {
      this.repoName = null;
    }
  }

  public String getTitle() {
    return this.title;
  }

  public Recommender setTitle(String title) {
    this.title = title;
    return this;
  }

  public void unsetTitle() {
    this.title = null;
  }

  /** Returns true if field title is set (has been assigned a value) and false otherwise */
  public boolean isSetTitle() {
    return this.title != null;
  }

  public void setTitleIsSet(boolean value) {
    if (!value) {
      this.title = null;
    }
  }

  public String getDescription() {
    return this.description;
  }

  public Recommender setDescription(String description) {
    this.description = description;
    return this;
  }

  public void unsetDescription() {
    this.description = null;
  }

  /** Returns true if field description is set (has been assigned a value) and false otherwise */
  public boolean isSetDescription() {
    return this.description != null;
  }

  public void setDescriptionIsSet(boolean value) {
    if (!value) {
      this.description = null;
    }
  }

  public String getImage() {
    return this.image;
  }

  public Recommender setImage(String image) {
    this.image = image;
    return this;
  }

  public void unsetImage() {
    this.image = null;
  }

  /** Returns true if field image is set (has been assigned a value) and false otherwise */
  public boolean isSetImage() {
    return this.image != null;
  }

  public void setImageIsSet(boolean value) {
    if (!value) {
      this.image = null;
    }
  }

  public String getVideo() {
    return this.video;
  }

  public Recommender setVideo(String video) {
    this.video = video;
    return this;
  }

  public void unsetVideo() {
    this.video = null;
  }

  /** Returns true if field video is set (has been assigned a value) and false otherwise */
  public boolean isSetVideo() {
    return this.video != null;
  }

  public void setVideoIsSet(boolean value) {
    if (!value) {
      this.video = null;
    }
  }

  public int getItemTypesSize() {
    return (this.itemTypes == null) ? 0 : this.itemTypes.size();
  }

  public void putToItemTypes(String key, String val) {
    if (this.itemTypes == null) {
      this.itemTypes = new HashMap<String,String>();
    }
    this.itemTypes.put(key, val);
  }

  public Map<String,String> getItemTypes() {
    return this.itemTypes;
  }

  public Recommender setItemTypes(Map<String,String> itemTypes) {
    this.itemTypes = itemTypes;
    return this;
  }

  public void unsetItemTypes() {
    this.itemTypes = null;
  }

  /** Returns true if field itemTypes is set (has been assigned a value) and false otherwise */
  public boolean isSetItemTypes() {
    return this.itemTypes != null;
  }

  public void setItemTypesIsSet(boolean value) {
    if (!value) {
      this.itemTypes = null;
    }
  }

  public int getDisplayItemsSize() {
    return (this.displayItems == null) ? 0 : this.displayItems.size();
  }

  public java.util.Iterator<String> getDisplayItemsIterator() {
    return (this.displayItems == null) ? null : this.displayItems.iterator();
  }

  public void addToDisplayItems(String elem) {
    if (this.displayItems == null) {
      this.displayItems = new ArrayList<String>();
    }
    this.displayItems.add(elem);
  }

  public List<String> getDisplayItems() {
    return this.displayItems;
  }

  public Recommender setDisplayItems(List<String> displayItems) {
    this.displayItems = displayItems;
    return this;
  }

  public void unsetDisplayItems() {
    this.displayItems = null;
  }

  /** Returns true if field displayItems is set (has been assigned a value) and false otherwise */
  public boolean isSetDisplayItems() {
    return this.displayItems != null;
  }

  public void setDisplayItemsIsSet(boolean value) {
    if (!value) {
      this.displayItems = null;
    }
  }

  public long getNumRecs() {
    return this.numRecs;
  }

  public Recommender setNumRecs(long numRecs) {
    this.numRecs = numRecs;
    setNumRecsIsSet(true);
    return this;
  }

  public void unsetNumRecs() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NUMRECS_ISSET_ID);
  }

  /** Returns true if field numRecs is set (has been assigned a value) and false otherwise */
  public boolean isSetNumRecs() {
    return EncodingUtils.testBit(__isset_bitfield, __NUMRECS_ISSET_ID);
  }

  public void setNumRecsIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NUMRECS_ISSET_ID, value);
  }

  public long getMaxRatingVal() {
    return this.maxRatingVal;
  }

  public Recommender setMaxRatingVal(long maxRatingVal) {
    this.maxRatingVal = maxRatingVal;
    setMaxRatingValIsSet(true);
    return this;
  }

  public void unsetMaxRatingVal() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MAXRATINGVAL_ISSET_ID);
  }

  /** Returns true if field maxRatingVal is set (has been assigned a value) and false otherwise */
  public boolean isSetMaxRatingVal() {
    return EncodingUtils.testBit(__isset_bitfield, __MAXRATINGVAL_ISSET_ID);
  }

  public void setMaxRatingValIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MAXRATINGVAL_ISSET_ID, value);
  }

  public String getRatingsColumn() {
    return this.ratingsColumn;
  }

  public Recommender setRatingsColumn(String ratingsColumn) {
    this.ratingsColumn = ratingsColumn;
    return this;
  }

  public void unsetRatingsColumn() {
    this.ratingsColumn = null;
  }

  /** Returns true if field ratingsColumn is set (has been assigned a value) and false otherwise */
  public boolean isSetRatingsColumn() {
    return this.ratingsColumn != null;
  }

  public void setRatingsColumnIsSet(boolean value) {
    if (!value) {
      this.ratingsColumn = null;
    }
  }

  public String getPrimaryKey() {
    return this.primaryKey;
  }

  public Recommender setPrimaryKey(String primaryKey) {
    this.primaryKey = primaryKey;
    return this;
  }

  public void unsetPrimaryKey() {
    this.primaryKey = null;
  }

  /** Returns true if field primaryKey is set (has been assigned a value) and false otherwise */
  public boolean isSetPrimaryKey() {
    return this.primaryKey != null;
  }

  public void setPrimaryKeyIsSet(boolean value) {
    if (!value) {
      this.primaryKey = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case USERNAME:
      if (value == null) {
        unsetUsername();
      } else {
        setUsername((String)value);
      }
      break;

    case RECOMMENDER_NAME:
      if (value == null) {
        unsetRecommenderName();
      } else {
        setRecommenderName((String)value);
      }
      break;

    case CLIENT_KEY:
      if (value == null) {
        unsetClientKey();
      } else {
        setClientKey((String)value);
      }
      break;

    case HOMEPAGE:
      if (value == null) {
        unsetHomepage();
      } else {
        setHomepage((String)value);
      }
      break;

    case REPO_NAME:
      if (value == null) {
        unsetRepoName();
      } else {
        setRepoName((String)value);
      }
      break;

    case TITLE:
      if (value == null) {
        unsetTitle();
      } else {
        setTitle((String)value);
      }
      break;

    case DESCRIPTION:
      if (value == null) {
        unsetDescription();
      } else {
        setDescription((String)value);
      }
      break;

    case IMAGE:
      if (value == null) {
        unsetImage();
      } else {
        setImage((String)value);
      }
      break;

    case VIDEO:
      if (value == null) {
        unsetVideo();
      } else {
        setVideo((String)value);
      }
      break;

    case ITEM_TYPES:
      if (value == null) {
        unsetItemTypes();
      } else {
        setItemTypes((Map<String,String>)value);
      }
      break;

    case DISPLAY_ITEMS:
      if (value == null) {
        unsetDisplayItems();
      } else {
        setDisplayItems((List<String>)value);
      }
      break;

    case NUM_RECS:
      if (value == null) {
        unsetNumRecs();
      } else {
        setNumRecs((Long)value);
      }
      break;

    case MAX_RATING_VAL:
      if (value == null) {
        unsetMaxRatingVal();
      } else {
        setMaxRatingVal((Long)value);
      }
      break;

    case RATINGS_COLUMN:
      if (value == null) {
        unsetRatingsColumn();
      } else {
        setRatingsColumn((String)value);
      }
      break;

    case PRIMARY_KEY:
      if (value == null) {
        unsetPrimaryKey();
      } else {
        setPrimaryKey((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case USERNAME:
      return getUsername();

    case RECOMMENDER_NAME:
      return getRecommenderName();

    case CLIENT_KEY:
      return getClientKey();

    case HOMEPAGE:
      return getHomepage();

    case REPO_NAME:
      return getRepoName();

    case TITLE:
      return getTitle();

    case DESCRIPTION:
      return getDescription();

    case IMAGE:
      return getImage();

    case VIDEO:
      return getVideo();

    case ITEM_TYPES:
      return getItemTypes();

    case DISPLAY_ITEMS:
      return getDisplayItems();

    case NUM_RECS:
      return Long.valueOf(getNumRecs());

    case MAX_RATING_VAL:
      return Long.valueOf(getMaxRatingVal());

    case RATINGS_COLUMN:
      return getRatingsColumn();

    case PRIMARY_KEY:
      return getPrimaryKey();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case USERNAME:
      return isSetUsername();
    case RECOMMENDER_NAME:
      return isSetRecommenderName();
    case CLIENT_KEY:
      return isSetClientKey();
    case HOMEPAGE:
      return isSetHomepage();
    case REPO_NAME:
      return isSetRepoName();
    case TITLE:
      return isSetTitle();
    case DESCRIPTION:
      return isSetDescription();
    case IMAGE:
      return isSetImage();
    case VIDEO:
      return isSetVideo();
    case ITEM_TYPES:
      return isSetItemTypes();
    case DISPLAY_ITEMS:
      return isSetDisplayItems();
    case NUM_RECS:
      return isSetNumRecs();
    case MAX_RATING_VAL:
      return isSetMaxRatingVal();
    case RATINGS_COLUMN:
      return isSetRatingsColumn();
    case PRIMARY_KEY:
      return isSetPrimaryKey();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof Recommender)
      return this.equals((Recommender)that);
    return false;
  }

  public boolean equals(Recommender that) {
    if (that == null)
      return false;

    boolean this_present_username = true && this.isSetUsername();
    boolean that_present_username = true && that.isSetUsername();
    if (this_present_username || that_present_username) {
      if (!(this_present_username && that_present_username))
        return false;
      if (!this.username.equals(that.username))
        return false;
    }

    boolean this_present_recommenderName = true && this.isSetRecommenderName();
    boolean that_present_recommenderName = true && that.isSetRecommenderName();
    if (this_present_recommenderName || that_present_recommenderName) {
      if (!(this_present_recommenderName && that_present_recommenderName))
        return false;
      if (!this.recommenderName.equals(that.recommenderName))
        return false;
    }

    boolean this_present_clientKey = true && this.isSetClientKey();
    boolean that_present_clientKey = true && that.isSetClientKey();
    if (this_present_clientKey || that_present_clientKey) {
      if (!(this_present_clientKey && that_present_clientKey))
        return false;
      if (!this.clientKey.equals(that.clientKey))
        return false;
    }

    boolean this_present_homepage = true && this.isSetHomepage();
    boolean that_present_homepage = true && that.isSetHomepage();
    if (this_present_homepage || that_present_homepage) {
      if (!(this_present_homepage && that_present_homepage))
        return false;
      if (!this.homepage.equals(that.homepage))
        return false;
    }

    boolean this_present_repoName = true && this.isSetRepoName();
    boolean that_present_repoName = true && that.isSetRepoName();
    if (this_present_repoName || that_present_repoName) {
      if (!(this_present_repoName && that_present_repoName))
        return false;
      if (!this.repoName.equals(that.repoName))
        return false;
    }

    boolean this_present_title = true && this.isSetTitle();
    boolean that_present_title = true && that.isSetTitle();
    if (this_present_title || that_present_title) {
      if (!(this_present_title && that_present_title))
        return false;
      if (!this.title.equals(that.title))
        return false;
    }

    boolean this_present_description = true && this.isSetDescription();
    boolean that_present_description = true && that.isSetDescription();
    if (this_present_description || that_present_description) {
      if (!(this_present_description && that_present_description))
        return false;
      if (!this.description.equals(that.description))
        return false;
    }

    boolean this_present_image = true && this.isSetImage();
    boolean that_present_image = true && that.isSetImage();
    if (this_present_image || that_present_image) {
      if (!(this_present_image && that_present_image))
        return false;
      if (!this.image.equals(that.image))
        return false;
    }

    boolean this_present_video = true && this.isSetVideo();
    boolean that_present_video = true && that.isSetVideo();
    if (this_present_video || that_present_video) {
      if (!(this_present_video && that_present_video))
        return false;
      if (!this.video.equals(that.video))
        return false;
    }

    boolean this_present_itemTypes = true && this.isSetItemTypes();
    boolean that_present_itemTypes = true && that.isSetItemTypes();
    if (this_present_itemTypes || that_present_itemTypes) {
      if (!(this_present_itemTypes && that_present_itemTypes))
        return false;
      if (!this.itemTypes.equals(that.itemTypes))
        return false;
    }

    boolean this_present_displayItems = true && this.isSetDisplayItems();
    boolean that_present_displayItems = true && that.isSetDisplayItems();
    if (this_present_displayItems || that_present_displayItems) {
      if (!(this_present_displayItems && that_present_displayItems))
        return false;
      if (!this.displayItems.equals(that.displayItems))
        return false;
    }

    boolean this_present_numRecs = true;
    boolean that_present_numRecs = true;
    if (this_present_numRecs || that_present_numRecs) {
      if (!(this_present_numRecs && that_present_numRecs))
        return false;
      if (this.numRecs != that.numRecs)
        return false;
    }

    boolean this_present_maxRatingVal = true;
    boolean that_present_maxRatingVal = true;
    if (this_present_maxRatingVal || that_present_maxRatingVal) {
      if (!(this_present_maxRatingVal && that_present_maxRatingVal))
        return false;
      if (this.maxRatingVal != that.maxRatingVal)
        return false;
    }

    boolean this_present_ratingsColumn = true && this.isSetRatingsColumn();
    boolean that_present_ratingsColumn = true && that.isSetRatingsColumn();
    if (this_present_ratingsColumn || that_present_ratingsColumn) {
      if (!(this_present_ratingsColumn && that_present_ratingsColumn))
        return false;
      if (!this.ratingsColumn.equals(that.ratingsColumn))
        return false;
    }

    boolean this_present_primaryKey = true && this.isSetPrimaryKey();
    boolean that_present_primaryKey = true && that.isSetPrimaryKey();
    if (this_present_primaryKey || that_present_primaryKey) {
      if (!(this_present_primaryKey && that_present_primaryKey))
        return false;
      if (!this.primaryKey.equals(that.primaryKey))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_username = true && (isSetUsername());
    list.add(present_username);
    if (present_username)
      list.add(username);

    boolean present_recommenderName = true && (isSetRecommenderName());
    list.add(present_recommenderName);
    if (present_recommenderName)
      list.add(recommenderName);

    boolean present_clientKey = true && (isSetClientKey());
    list.add(present_clientKey);
    if (present_clientKey)
      list.add(clientKey);

    boolean present_homepage = true && (isSetHomepage());
    list.add(present_homepage);
    if (present_homepage)
      list.add(homepage);

    boolean present_repoName = true && (isSetRepoName());
    list.add(present_repoName);
    if (present_repoName)
      list.add(repoName);

    boolean present_title = true && (isSetTitle());
    list.add(present_title);
    if (present_title)
      list.add(title);

    boolean present_description = true && (isSetDescription());
    list.add(present_description);
    if (present_description)
      list.add(description);

    boolean present_image = true && (isSetImage());
    list.add(present_image);
    if (present_image)
      list.add(image);

    boolean present_video = true && (isSetVideo());
    list.add(present_video);
    if (present_video)
      list.add(video);

    boolean present_itemTypes = true && (isSetItemTypes());
    list.add(present_itemTypes);
    if (present_itemTypes)
      list.add(itemTypes);

    boolean present_displayItems = true && (isSetDisplayItems());
    list.add(present_displayItems);
    if (present_displayItems)
      list.add(displayItems);

    boolean present_numRecs = true;
    list.add(present_numRecs);
    if (present_numRecs)
      list.add(numRecs);

    boolean present_maxRatingVal = true;
    list.add(present_maxRatingVal);
    if (present_maxRatingVal)
      list.add(maxRatingVal);

    boolean present_ratingsColumn = true && (isSetRatingsColumn());
    list.add(present_ratingsColumn);
    if (present_ratingsColumn)
      list.add(ratingsColumn);

    boolean present_primaryKey = true && (isSetPrimaryKey());
    list.add(present_primaryKey);
    if (present_primaryKey)
      list.add(primaryKey);

    return list.hashCode();
  }

  @Override
  public int compareTo(Recommender other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetUsername()).compareTo(other.isSetUsername());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUsername()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.username, other.username);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRecommenderName()).compareTo(other.isSetRecommenderName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecommenderName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recommenderName, other.recommenderName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientKey()).compareTo(other.isSetClientKey());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientKey()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientKey, other.clientKey);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHomepage()).compareTo(other.isSetHomepage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHomepage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.homepage, other.homepage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRepoName()).compareTo(other.isSetRepoName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRepoName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.repoName, other.repoName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTitle()).compareTo(other.isSetTitle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTitle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.title, other.title);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDescription()).compareTo(other.isSetDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.description, other.description);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetImage()).compareTo(other.isSetImage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetImage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.image, other.image);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVideo()).compareTo(other.isSetVideo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVideo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.video, other.video);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetItemTypes()).compareTo(other.isSetItemTypes());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetItemTypes()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.itemTypes, other.itemTypes);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDisplayItems()).compareTo(other.isSetDisplayItems());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisplayItems()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.displayItems, other.displayItems);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumRecs()).compareTo(other.isSetNumRecs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumRecs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numRecs, other.numRecs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMaxRatingVal()).compareTo(other.isSetMaxRatingVal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMaxRatingVal()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.maxRatingVal, other.maxRatingVal);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRatingsColumn()).compareTo(other.isSetRatingsColumn());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRatingsColumn()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ratingsColumn, other.ratingsColumn);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPrimaryKey()).compareTo(other.isSetPrimaryKey());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrimaryKey()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.primaryKey, other.primaryKey);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("Recommender(");
    boolean first = true;

    sb.append("username:");
    if (this.username == null) {
      sb.append("null");
    } else {
      sb.append(this.username);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("recommenderName:");
    if (this.recommenderName == null) {
      sb.append("null");
    } else {
      sb.append(this.recommenderName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("clientKey:");
    if (this.clientKey == null) {
      sb.append("null");
    } else {
      sb.append(this.clientKey);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("homepage:");
    if (this.homepage == null) {
      sb.append("null");
    } else {
      sb.append(this.homepage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("repoName:");
    if (this.repoName == null) {
      sb.append("null");
    } else {
      sb.append(this.repoName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("title:");
    if (this.title == null) {
      sb.append("null");
    } else {
      sb.append(this.title);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("description:");
    if (this.description == null) {
      sb.append("null");
    } else {
      sb.append(this.description);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("image:");
    if (this.image == null) {
      sb.append("null");
    } else {
      sb.append(this.image);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("video:");
    if (this.video == null) {
      sb.append("null");
    } else {
      sb.append(this.video);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("itemTypes:");
    if (this.itemTypes == null) {
      sb.append("null");
    } else {
      sb.append(this.itemTypes);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("displayItems:");
    if (this.displayItems == null) {
      sb.append("null");
    } else {
      sb.append(this.displayItems);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("numRecs:");
    sb.append(this.numRecs);
    first = false;
    if (!first) sb.append(", ");
    sb.append("maxRatingVal:");
    sb.append(this.maxRatingVal);
    first = false;
    if (!first) sb.append(", ");
    sb.append("ratingsColumn:");
    if (this.ratingsColumn == null) {
      sb.append("null");
    } else {
      sb.append(this.ratingsColumn);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("primaryKey:");
    if (this.primaryKey == null) {
      sb.append("null");
    } else {
      sb.append(this.primaryKey);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (username == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'username' was not present! Struct: " + toString());
    }
    if (recommenderName == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'recommenderName' was not present! Struct: " + toString());
    }
    if (clientKey == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'clientKey' was not present! Struct: " + toString());
    }
    if (homepage == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'homepage' was not present! Struct: " + toString());
    }
    if (repoName == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'repoName' was not present! Struct: " + toString());
    }
    if (title == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'title' was not present! Struct: " + toString());
    }
    if (description == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'description' was not present! Struct: " + toString());
    }
    if (image == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'image' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'numRecs' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'maxRatingVal' because it's a primitive and you chose the non-beans generator.
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class RecommenderStandardSchemeFactory implements SchemeFactory {
    public RecommenderStandardScheme getScheme() {
      return new RecommenderStandardScheme();
    }
  }

  private static class RecommenderStandardScheme extends StandardScheme<Recommender> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Recommender struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // USERNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.username = iprot.readString();
              struct.setUsernameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // RECOMMENDER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.recommenderName = iprot.readString();
              struct.setRecommenderNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CLIENT_KEY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientKey = iprot.readString();
              struct.setClientKeyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // HOMEPAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.homepage = iprot.readString();
              struct.setHomepageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // REPO_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.repoName = iprot.readString();
              struct.setRepoNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // TITLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.title = iprot.readString();
              struct.setTitleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.description = iprot.readString();
              struct.setDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // IMAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.image = iprot.readString();
              struct.setImageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // VIDEO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.video = iprot.readString();
              struct.setVideoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // ITEM_TYPES
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map10 = iprot.readMapBegin();
                struct.itemTypes = new HashMap<String,String>(2*_map10.size);
                String _key11;
                String _val12;
                for (int _i13 = 0; _i13 < _map10.size; ++_i13)
                {
                  _key11 = iprot.readString();
                  _val12 = iprot.readString();
                  struct.itemTypes.put(_key11, _val12);
                }
                iprot.readMapEnd();
              }
              struct.setItemTypesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // DISPLAY_ITEMS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list14 = iprot.readListBegin();
                struct.displayItems = new ArrayList<String>(_list14.size);
                String _elem15;
                for (int _i16 = 0; _i16 < _list14.size; ++_i16)
                {
                  _elem15 = iprot.readString();
                  struct.displayItems.add(_elem15);
                }
                iprot.readListEnd();
              }
              struct.setDisplayItemsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // NUM_RECS
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.numRecs = iprot.readI64();
              struct.setNumRecsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // MAX_RATING_VAL
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.maxRatingVal = iprot.readI64();
              struct.setMaxRatingValIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // RATINGS_COLUMN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ratingsColumn = iprot.readString();
              struct.setRatingsColumnIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // PRIMARY_KEY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.primaryKey = iprot.readString();
              struct.setPrimaryKeyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetNumRecs()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'numRecs' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetMaxRatingVal()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'maxRatingVal' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Recommender struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.username != null) {
        oprot.writeFieldBegin(USERNAME_FIELD_DESC);
        oprot.writeString(struct.username);
        oprot.writeFieldEnd();
      }
      if (struct.recommenderName != null) {
        oprot.writeFieldBegin(RECOMMENDER_NAME_FIELD_DESC);
        oprot.writeString(struct.recommenderName);
        oprot.writeFieldEnd();
      }
      if (struct.clientKey != null) {
        oprot.writeFieldBegin(CLIENT_KEY_FIELD_DESC);
        oprot.writeString(struct.clientKey);
        oprot.writeFieldEnd();
      }
      if (struct.homepage != null) {
        oprot.writeFieldBegin(HOMEPAGE_FIELD_DESC);
        oprot.writeString(struct.homepage);
        oprot.writeFieldEnd();
      }
      if (struct.repoName != null) {
        oprot.writeFieldBegin(REPO_NAME_FIELD_DESC);
        oprot.writeString(struct.repoName);
        oprot.writeFieldEnd();
      }
      if (struct.title != null) {
        oprot.writeFieldBegin(TITLE_FIELD_DESC);
        oprot.writeString(struct.title);
        oprot.writeFieldEnd();
      }
      if (struct.description != null) {
        oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
        oprot.writeString(struct.description);
        oprot.writeFieldEnd();
      }
      if (struct.image != null) {
        oprot.writeFieldBegin(IMAGE_FIELD_DESC);
        oprot.writeString(struct.image);
        oprot.writeFieldEnd();
      }
      if (struct.video != null) {
        oprot.writeFieldBegin(VIDEO_FIELD_DESC);
        oprot.writeString(struct.video);
        oprot.writeFieldEnd();
      }
      if (struct.itemTypes != null) {
        oprot.writeFieldBegin(ITEM_TYPES_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.itemTypes.size()));
          for (Map.Entry<String, String> _iter17 : struct.itemTypes.entrySet())
          {
            oprot.writeString(_iter17.getKey());
            oprot.writeString(_iter17.getValue());
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.displayItems != null) {
        oprot.writeFieldBegin(DISPLAY_ITEMS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.displayItems.size()));
          for (String _iter18 : struct.displayItems)
          {
            oprot.writeString(_iter18);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(NUM_RECS_FIELD_DESC);
      oprot.writeI64(struct.numRecs);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MAX_RATING_VAL_FIELD_DESC);
      oprot.writeI64(struct.maxRatingVal);
      oprot.writeFieldEnd();
      if (struct.ratingsColumn != null) {
        oprot.writeFieldBegin(RATINGS_COLUMN_FIELD_DESC);
        oprot.writeString(struct.ratingsColumn);
        oprot.writeFieldEnd();
      }
      if (struct.primaryKey != null) {
        oprot.writeFieldBegin(PRIMARY_KEY_FIELD_DESC);
        oprot.writeString(struct.primaryKey);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class RecommenderTupleSchemeFactory implements SchemeFactory {
    public RecommenderTupleScheme getScheme() {
      return new RecommenderTupleScheme();
    }
  }

  private static class RecommenderTupleScheme extends TupleScheme<Recommender> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Recommender struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeString(struct.username);
      oprot.writeString(struct.recommenderName);
      oprot.writeString(struct.clientKey);
      oprot.writeString(struct.homepage);
      oprot.writeString(struct.repoName);
      oprot.writeString(struct.title);
      oprot.writeString(struct.description);
      oprot.writeString(struct.image);
      oprot.writeI64(struct.numRecs);
      oprot.writeI64(struct.maxRatingVal);
      BitSet optionals = new BitSet();
      if (struct.isSetVideo()) {
        optionals.set(0);
      }
      if (struct.isSetItemTypes()) {
        optionals.set(1);
      }
      if (struct.isSetDisplayItems()) {
        optionals.set(2);
      }
      if (struct.isSetRatingsColumn()) {
        optionals.set(3);
      }
      if (struct.isSetPrimaryKey()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetVideo()) {
        oprot.writeString(struct.video);
      }
      if (struct.isSetItemTypes()) {
        {
          oprot.writeI32(struct.itemTypes.size());
          for (Map.Entry<String, String> _iter19 : struct.itemTypes.entrySet())
          {
            oprot.writeString(_iter19.getKey());
            oprot.writeString(_iter19.getValue());
          }
        }
      }
      if (struct.isSetDisplayItems()) {
        {
          oprot.writeI32(struct.displayItems.size());
          for (String _iter20 : struct.displayItems)
          {
            oprot.writeString(_iter20);
          }
        }
      }
      if (struct.isSetRatingsColumn()) {
        oprot.writeString(struct.ratingsColumn);
      }
      if (struct.isSetPrimaryKey()) {
        oprot.writeString(struct.primaryKey);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Recommender struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.username = iprot.readString();
      struct.setUsernameIsSet(true);
      struct.recommenderName = iprot.readString();
      struct.setRecommenderNameIsSet(true);
      struct.clientKey = iprot.readString();
      struct.setClientKeyIsSet(true);
      struct.homepage = iprot.readString();
      struct.setHomepageIsSet(true);
      struct.repoName = iprot.readString();
      struct.setRepoNameIsSet(true);
      struct.title = iprot.readString();
      struct.setTitleIsSet(true);
      struct.description = iprot.readString();
      struct.setDescriptionIsSet(true);
      struct.image = iprot.readString();
      struct.setImageIsSet(true);
      struct.numRecs = iprot.readI64();
      struct.setNumRecsIsSet(true);
      struct.maxRatingVal = iprot.readI64();
      struct.setMaxRatingValIsSet(true);
      BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.video = iprot.readString();
        struct.setVideoIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TMap _map21 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.itemTypes = new HashMap<String,String>(2*_map21.size);
          String _key22;
          String _val23;
          for (int _i24 = 0; _i24 < _map21.size; ++_i24)
          {
            _key22 = iprot.readString();
            _val23 = iprot.readString();
            struct.itemTypes.put(_key22, _val23);
          }
        }
        struct.setItemTypesIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list25 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.displayItems = new ArrayList<String>(_list25.size);
          String _elem26;
          for (int _i27 = 0; _i27 < _list25.size; ++_i27)
          {
            _elem26 = iprot.readString();
            struct.displayItems.add(_elem26);
          }
        }
        struct.setDisplayItemsIsSet(true);
      }
      if (incoming.get(3)) {
        struct.ratingsColumn = iprot.readString();
        struct.setRatingsColumnIsSet(true);
      }
      if (incoming.get(4)) {
        struct.primaryKey = iprot.readString();
        struct.setPrimaryKeyIsSet(true);
      }
    }
  }

}

